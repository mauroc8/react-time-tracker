{"version":3,"sources":["hooks.js","mockAdapter.js","API_URL.js","Tasks/TaskTimer.js","Tasks/ShowTask.js","Tasks/EditTask.js","Tasks/Task.js","Tasks/CreateTaskForm.js","Tasks/CreateTask.js","App/SearchBar.js","App/LocalStorageNotice.js","App/ImportTasks.js","App/ExportTasks.js","App/ButtonBar.js","App.js","index.js"],"names":["isTaskEqualTo","task","otherTask","name","project","useWillUnmount","useState","willUnmount","setWillUnmount","useEffect","useErrorMessage","errorMessage","setErrorMessage","isHidden","setIsHidden","errorDiv","className","timeout","setTimeout","clearTimeout","mockAPI","mockAdapter","MockAdapter","axios","delayResponse","saveTasks","tasks","localStorage","setItem","JSON","stringify","expirationDate","Date","setFullYear","getFullYear","document","cookie","escape","toGMTString","setTasksInCookies","getItem","parse","match","json","unescape","getTasksFromCookies","onGet","reply","config","slice","onPost","newTask","data","some","push","onPatch","old_task","new_task","find","undefined","Object","assign","filter","newTasks","concat","API_URL","Boolean","process","REACT_APP_API","replace","initCanvas","canvas","rect","getBoundingClientRect","width","height","cx","getContext","fillStyle","drawTime","percent","startAngle","Math","PI","endAngle","center","globalAlpha","clearRect","beginPath","moveTo","arc","fill","globalCompositeOperation","TaskTimer","startingSeconds","isTimerRunning","children","canvasRef","useRef","current","JEST_WORKER_ID","timerIsRunning","requestAnimationFrame","frame","time","dt","lastTime","minutePercent","performance","now","startTimer","seconds","drawTimer","ref","zeroPad","number","String","substr","timerReducer","state","action","type","isRunning","millisecondsOnStart","milliseconds","timestampOnStart","millisecondsUntillNextMinute","ShowTask","editTask","updateTasks","selectProject","onPlayStart","useReducer","timer","dispatch","minutes","floor","hours","saveTask","useCallback","callback","patch","then","resp","catch","err","response","status","console","error","stopTimer","map","someTask","window","onbeforeunload","evt","draggable","onDragStart","dataTransfer","setData","onDragOver","preventDefault","onDrop","getData","split","other","otherIndex","findIndex","taskIndex","otherTimestamp","length","timestamp","reorderTasks","style","color","key","onClick","src","alt","title","_fromEvent","setter","target","value","EditTask","cancelEdition","taskName","setTaskName","setMinutes","setHours","hasClickedDelete","setHasClickedDelete","confirmButton","disabled","placeholder","onChange","min","max","post","Task","isEditing","setIsEditing","isFirstTime","setIsFirstTime","tasksLength","newProjectColors","CreateTaskForm","projects","projectColors","onCreate","onCancel","selectedProjectName","setSelectedProjectName","newProjectName","setNewProjectName","random","newProjectColor","setNewProjectColor","taskColor","createButton","onSubmit","event","id","fontStyle","CreateTask","isCreatingTask","setIsCreatingTask","projectsLength","SearchBar","searchQuery","setSearchQuery","inputRef","handleEscape","focus","addEventListener","removeEventListener","right","LocalStorageNotice","isUnderstood","setIsUnderstood","Import","input","createElement","processFile","file","result","accept","click","files","reader","FileReader","readAsText","ExportTasks","a","setAttribute","encodeURIComponent","ButtonBar","ImportTasks","App","setTasks","updateCounter","setUpdateCounter","get","sort","taskA","taskB","searchWords","trim","toLowerCase","every","word","includes","updaterFunction","useTasks","create","reduce","getProjectsFromTasks","clear","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c365334d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport API_URL from \"./API_URL\";\n\nexport const isTaskEqualTo = task => otherTask =>\n  task.name === otherTask.name && task.project === otherTask.project;\n\nexport function formatTaskName(name) {\n  // The slash is needed to separate task name from project.\n  return name.replace(/\\//g, \"-\");\n}\n\nexport function useWillUnmount() {\n  const [willUnmount, setWillUnmount] = useState(false);\n\n  useEffect(() => {\n    return () => setWillUnmount(true);\n  }, []);\n\n  return willUnmount;\n}\n\nexport function useTasks(searchQuery, setErrorMessage) {\n  const willUnmount = useWillUnmount();\n  let [tasks, setTasks] = useState(null);\n  const [updateCounter, setUpdateCounter] = useState(0);\n\n  useEffect(() => {\n    axios\n      .get(`${API_URL}/tasks/`)\n      .then(resp => {\n        if (!willUnmount) {\n          setTasks(resp.data);\n        }\n      })\n      .catch(err => {\n        if (!willUnmount) {\n          if (err.response) {\n            setErrorMessage(\"The server responded with an error.\");\n          } else {\n            setErrorMessage(\n              \"Error connecting with the server. Please reload the tab.\"\n            );\n            console.error(err);\n          }\n        }\n      });\n  }, [willUnmount, updateCounter, setErrorMessage]);\n\n  if (tasks !== null) {\n    tasks = tasks.sort((taskA, taskB) => taskB.timestamp - taskA.timestamp);\n\n    if (searchQuery.length) {\n      const searchWords = searchQuery\n        .trim()\n        .toLowerCase()\n        .replace(/\\s+/g, \" \")\n        .split(\" \");\n\n      if (searchWords.length) {\n        tasks = tasks.filter(task =>\n          searchWords.every(\n            word =>\n              task.name.toLowerCase().includes(word) ||\n              task.project.toLowerCase().includes(word)\n          )\n        );\n      }\n    }\n  }\n\n  const updateTasks = updaterFunction => {\n    if (updaterFunction) {\n      // Manually update, to give immediate feedback\n      setTasks(updaterFunction(tasks));\n      // (But fetch anyway to validate the API did the right thing.)\n    }\n    setUpdateCounter(updateCounter + 1);\n  };\n\n  return [tasks, updateTasks];\n}\n\nexport function getProjectsFromTasks(tasks) {\n  if (tasks === null) {\n    return [];\n  }\n\n  const projectColors = Object.create(null);\n\n  const projects = tasks.reduce((projects, task) => {\n    if (projects.includes(task.project)) {\n      return projects;\n    }\n    projectColors[task.project] = task.color;\n\n    return [...projects, task.project];\n  }, []);\n\n  return [projects, projectColors];\n}\n\nexport function useErrorMessage() {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isHidden, setIsHidden] = useState(true);\n\n  const errorDiv = (\n    <div className={`error-message ${isHidden ? `hidden` : ``}`}>\n      {errorMessage}\n    </div>\n  );\n\n  useEffect(() => {\n    if (errorMessage) {\n      setIsHidden(false);\n\n      let timeout = setTimeout(() => {\n        setIsHidden(true);\n        setErrorMessage(\"\");\n        timeout = null;\n      }, 3200);\n      return () => {\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n      };\n    }\n  }, [errorMessage]);\n\n  return [errorDiv, setErrorMessage];\n}\n","import axios from \"axios\";\nimport MockAdapter from \"axios-mock-adapter\";\nimport { isTaskEqualTo } from \"./hooks\";\n\nconst mockAPI = \"https://mock.adapter.com\";\nconst mockAdapter = new MockAdapter(axios, { delayResponse: 180 });\n\nfunction getTasks() {\n  if (localStorage.getItem(\"tasks\")) {\n    return JSON.parse(localStorage.getItem(\"tasks\"));\n  } else {\n    // Try to recover data from cookies\n    return getTasksFromCookies() || [];\n  }\n}\n\nfunction saveTasks(tasks) {\n  localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  setTasksInCookies(tasks);\n}\n\nfunction getTasksFromCookies() {\n  const cookie = document.cookie;\n  const match = cookie.match(/tasks=([^;]+)/);\n  const json = match && unescape(match[1]);\n  return json && JSON.parse(json);\n}\n\nfunction setTasksInCookies(tasks) {\n  const expirationDate = new Date();\n  expirationDate.setFullYear(expirationDate.getFullYear() + 6);\n  document.cookie = `tasks=${escape(\n    JSON.stringify(tasks)\n  )};expires=${expirationDate.toGMTString()}`;\n}\n\nlet tasks = getTasks();\n\nmockAdapter.onGet(`${mockAPI}/tasks/`).reply(config => {\n  return [200, tasks.slice()];\n});\n\nmockAdapter.onPost(`${mockAPI}/tasks/`).reply(config => {\n  const newTask = JSON.parse(config.data);\n\n  if (tasks.some(isTaskEqualTo(newTask))) {\n    return [403, {}];\n  }\n\n  tasks.push(newTask);\n  saveTasks(tasks);\n  return [200, {}];\n});\n\nmockAdapter.onPatch(`${mockAPI}/tasks/`).reply(config => {\n  const { old_task, new_task } = JSON.parse(config.data);\n\n  const task = tasks.find(isTaskEqualTo(old_task));\n\n  if (\n    !isTaskEqualTo(old_task)(new_task) &&\n    tasks.some(isTaskEqualTo(new_task))\n  ) {\n    // Trying to change task name, but it already exists a task with the new name.\n    return [405, {}];\n  }\n\n  if (task === undefined) {\n    return [403, {}];\n  }\n\n  Object.assign(task, new_task);\n  saveTasks(tasks);\n  return [200, {}];\n});\n\nmockAdapter.onPost(`${mockAPI}/delete-task/`).reply(config => {\n  const task = JSON.parse(config.data);\n\n  if (!tasks.some(isTaskEqualTo(task))) {\n    return [403, {}];\n  }\n\n  tasks = tasks.filter(otherTask => !isTaskEqualTo(task)(otherTask));\n  saveTasks(tasks);\n  return [200, {}];\n});\n\nmockAdapter.onPost(`${mockAPI}/import-tasks/`).reply(config => {\n  const newTasks = JSON.parse(config.data);\n\n  tasks = tasks\n    .filter(task => !newTasks.some(isTaskEqualTo(task)))\n    .concat(newTasks);\n\n  saveTasks(tasks);\n  return [200, {}];\n});\n\nexport { mockAPI };\n","import { mockAPI } from \"./mockAdapter\";\n\nconst usesRealAPI = Boolean(process.env.REACT_APP_API);\nconst API_URL = usesRealAPI\n  ? process.env.REACT_APP_API.replace(/\\/^/, \"\")\n  : mockAPI;\n\n// If there's no real API, all requests will be sent to the mockAPI url.\n// Then the mockAdapter will take care of them.\n\nexport default API_URL;\n","import React, { useRef, useEffect } from \"react\";\n\nfunction initCanvas(canvas) {\n  const rect = canvas.getBoundingClientRect();\n  const width = (canvas.width = rect.width);\n  const height = (canvas.height = rect.height);\n\n  const cx = canvas.getContext(\"2d\");\n  cx.fillStyle = \"white\";\n\n  return [cx, width, height];\n}\n\nfunction drawTime(cx, width, height, percent) {\n  const startAngle = -Math.PI / 2;\n  const endAngle = Math.PI * 2 * percent + startAngle;\n  const center = [width / 2, height / 2];\n\n  cx.globalAlpha = 0.4;\n  cx.clearRect(0, 0, width, height);\n  cx.beginPath();\n  cx.moveTo(...center);\n  cx.arc(...center, width / 2, startAngle, endAngle);\n  cx.fill();\n\n  cx.globalAlpha = 1;\n  cx.globalCompositeOperation = \"destination-out\";\n  cx.beginPath();\n  cx.moveTo(...center);\n  cx.arc(...center, width / 2 - 4, 0, Math.PI * 2);\n  cx.fill();\n  cx.globalCompositeOperation = \"source-over\";\n}\n\nfunction startTimer(canvas, startingSeconds) {\n  let timerIsRunning = true;\n\n  const [cx, width, height] = initCanvas(canvas);\n\n  requestAnimationFrame(frame);\n\n  let lastTime = performance.now();\n  let minutePercent = (startingSeconds % 60) / 60;\n\n  function frame(time) {\n    if (timerIsRunning) {\n      requestAnimationFrame(frame);\n    }\n\n    const dt = (time - lastTime) / 1000;\n    lastTime = time;\n\n    minutePercent += dt / 60;\n\n    drawTime(cx, width, height, minutePercent);\n  }\n\n  return function stopTimer() {\n    timerIsRunning = false;\n  };\n}\n\nfunction drawTimer(canvas, seconds) {\n  const [cx, width, height] = initCanvas(canvas);\n  const percent = (seconds % 60) / 60;\n\n  drawTime(cx, width, height, percent);\n}\n\nfunction TaskTimer({ startingSeconds, isTimerRunning = false, children }) {\n  const canvasRef = useRef(null);\n\n  // Draw\n  useEffect(() => {\n    if (canvasRef.current && process.env.JEST_WORKER_ID === undefined) {\n      if (isTimerRunning) {\n        return startTimer(canvasRef.current, startingSeconds);\n      } else {\n        drawTimer(canvasRef.current, startingSeconds);\n      }\n    }\n  }, [isTimerRunning, startingSeconds]);\n\n  return (\n    <div className=\"task-timer-container\">\n      <canvas ref={canvasRef} className=\"task-timer\"></canvas>\n      {children}\n    </div>\n  );\n}\n\nexport default TaskTimer;\n","import React, { useEffect, useCallback, useReducer } from \"react\";\nimport axios from \"axios\";\nimport API_URL from \"../API_URL\";\nimport TaskTimer from \"./TaskTimer\";\nimport { isTaskEqualTo, useErrorMessage, useWillUnmount } from \"../hooks\";\n\nconst zeroPad = number => {\n  return String(100 + (number % 100)).substr(1);\n};\n\nconst timerReducer = (state, action) => {\n  switch (action.type) {\n    case \"START\":\n      return {\n        ...state,\n        isRunning: true,\n        millisecondsOnStart: state.milliseconds,\n        timestampOnStart: Date.now(),\n        millisecondsUntillNextMinute:\n          60 * 1000 - (state.milliseconds % (60 * 1000))\n      };\n    case \"STOP\":\n      return {\n        ...state,\n        isRunning: false\n      };\n    case \"TICK\":\n      const milliseconds =\n        state.millisecondsOnStart + Date.now() - state.timestampOnStart;\n      return {\n        ...state,\n        milliseconds,\n        millisecondsUntillNextMinute: 60 * 1000 - (milliseconds % (60 * 1000))\n      };\n    case \"UPDATE\":\n      return {\n        ...state,\n        milliseconds: action.seconds * 1000\n      };\n    default:\n      return state;\n  }\n};\n\nfunction ShowTask({\n  task,\n  editTask,\n  updateTasks,\n  selectProject,\n  tasks,\n  onPlayStart\n}) {\n  const [timer, dispatch] = useReducer(timerReducer, {\n    isRunning: false,\n    milliseconds: task.seconds * 1000,\n    millisecondsOnStart: null,\n    timestampOnStart: null,\n    millisecondsUntillNextMinute: null\n  });\n\n  const minutes = Math.floor(timer.milliseconds / 60 / 1000) % 60;\n  const hours = Math.floor(timer.milliseconds / 60 / 1000 / 60);\n\n  const [errorDiv, setErrorMessage] = useErrorMessage();\n  const willUnmount = useWillUnmount();\n\n  useEffect(() => {\n    const seconds = Math.floor(timer.milliseconds / 1000);\n\n    if (!timer.isRunning && task.seconds !== seconds) {\n      dispatch({ type: \"UPDATE\", seconds: task.seconds });\n    }\n  }, [timer.isRunning, task.seconds, timer.milliseconds]);\n\n  const saveTask = useCallback(\n    callback => {\n      const milliseconds =\n        timer.millisecondsOnStart + Date.now() - timer.timestampOnStart;\n      const seconds = Math.floor(milliseconds / 1000);\n\n      axios\n        .patch(`${API_URL}/tasks/`, {\n          old_task: { name: task.name, project: task.project },\n          new_task: { ...task, seconds }\n        })\n        .then(resp => {\n          if (callback) {\n            callback(seconds);\n          }\n        })\n        .catch(err => {\n          if (err.response && err.response.status === 405) {\n            setErrorMessage(\n              \"Somehow, we tried to change this task name to an invalid one.\"\n            );\n          } else if (err.response && err.response.status === 403) {\n            setErrorMessage(\n              \"Invalid request: this task doesn't exist anymore.\"\n            );\n          } else {\n            setErrorMessage(\"Error connecting with the server.\");\n            console.error(err);\n          }\n        });\n    },\n    [task, timer.millisecondsOnStart, timer.timestampOnStart, setErrorMessage]\n  );\n\n  useEffect(() => {\n    if (timer.isRunning) {\n      const timeout = setTimeout(\n        () => dispatch({ type: \"TICK\" }),\n        timer.millisecondsUntillNextMinute\n      );\n      return () => clearTimeout(timeout);\n    }\n  }, [timer.isRunning, timer.millisecondsUntillNextMinute]);\n\n  function startTimer() {\n    dispatch({ type: \"START\" });\n    onPlayStart();\n  }\n\n  // Stop timer and save result\n  function stopTimer(callback) {\n    saveTask(seconds => {\n      updateTasks(tasks =>\n        tasks.map(someTask => {\n          if (\n            someTask.name === task.name &&\n            someTask.project === task.project\n          ) {\n            return { ...task, seconds };\n          }\n          return someTask;\n        })\n      );\n      if (!willUnmount) {\n        dispatch({ type: \"STOP\" });\n        if (callback) {\n          callback();\n        }\n      }\n    });\n  }\n\n  // Save task every minute\n  useEffect(() => {\n    const seconds = Math.floor(timer.milliseconds / 1000);\n\n    if (timer.isRunning && seconds !== task.seconds && seconds % 60 === 0) {\n      saveTask();\n    }\n  }, [timer.isRunning, saveTask, timer.milliseconds, task.seconds]);\n\n  function reorderTasks(other) {\n    const otherIndex = tasks.findIndex(isTaskEqualTo(other));\n    const taskIndex = tasks.findIndex(isTaskEqualTo(task));\n\n    if (otherIndex === -1 || taskIndex === -1) return;\n\n    let otherTimestamp;\n\n    if (otherIndex < taskIndex) {\n      otherTimestamp =\n        taskIndex >= tasks.length - 1\n          ? task.timestamp - 9000\n          : tasks[taskIndex + 1].timestamp;\n    } else {\n      otherTimestamp =\n        taskIndex > 0 ? tasks[taskIndex - 1].timestamp : Date.now();\n    }\n\n    const timestamp = Math.floor((task.timestamp + otherTimestamp) / 2);\n    const otherTask = tasks.find(isTaskEqualTo(other));\n\n    axios\n      .patch(`${API_URL}/tasks/`, {\n        old_task: other,\n        new_task: { ...otherTask, timestamp }\n      })\n      .then(resp => {\n        updateTasks();\n      })\n      .catch(err => {\n        if (err.response && err.response.status === 405) {\n          setErrorMessage(\n            \"Somehow, we tried to change this task name to an invalid one.\"\n          );\n        } else if (err.response && err.response.status === 403) {\n          setErrorMessage(\"Invalid request: This task doesn't exist anymore.\");\n        } else {\n          setErrorMessage(\"Error connecting with the server.\");\n          console.error(err);\n        }\n      });\n  }\n\n  // Ask confirmation when user closes tab\n  useEffect(() => {\n    if (timer.isRunning) {\n      window.onbeforeunload = evt => {\n        return \"There's a task running. You'll loose the timer progress.\";\n      };\n\n      return () => (window.onbeforeunload = undefined);\n    }\n  }, [timer.isRunning]);\n\n  return (\n    <div\n      draggable\n      onDragStart={evt => {\n        evt.dataTransfer.setData(\"text/plain\", `${task.name}/${task.project}`);\n      }}\n      onDragOver={evt => evt.preventDefault()}\n      onDrop={evt => {\n        evt.preventDefault();\n        const [name, project] = evt.dataTransfer.getData(\"text\").split(\"/\");\n        if (name && project) {\n          reorderTasks({ name, project }, task);\n        }\n      }}\n      className=\"task\"\n      style={{\n        \"--task-color\": task.color\n      }}\n    >\n      <div className=\"task-head\">\n        <TaskTimer\n          key={minutes}\n          startingSeconds={Math.floor(timer.milliseconds / 1000)}\n          isTimerRunning={timer.isRunning}\n        >\n          {!timer.isRunning ? (\n            <button className=\"start\" onClick={startTimer}>\n              <img\n                src={`${process.env.PUBLIC_URL}/baseline_play_arrow_white_24dp.png`}\n                alt=\"Start timer\"\n                title=\"Start timer\"\n              />\n            </button>\n          ) : (\n            <button className=\"stop\" onClick={() => stopTimer()}>\n              <img\n                src={`${process.env.PUBLIC_URL}/baseline_pause_white_24dp.png`}\n                alt=\"Stop timer\"\n                title=\"Stop timer\"\n              />\n            </button>\n          )}\n        </TaskTimer>\n      </div>\n      <div className=\"task-body\">\n        <div className=\"float-left\">\n          <h3>{task.name}</h3>\n          {zeroPad(hours)}:{zeroPad(minutes)}\n          {\" - \"}\n          <span\n            className=\"clickable\"\n            onClick={() => selectProject(task.project)}\n          >\n            {task.project}\n          </span>\n          {errorDiv}\n        </div>\n        <div className=\"task-foot\">\n          <button\n            className=\"edit\"\n            onClick={() => {\n              if (timer.isRunning) {\n                stopTimer(editTask);\n              } else {\n                editTask();\n              }\n            }}\n          >\n            Edit\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ShowTask;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport API_URL from \"../API_URL\";\nimport { useWillUnmount, useErrorMessage } from \"../hooks\";\nimport TaskTimer from \"./TaskTimer\";\n\nconst _fromEvent = setter => evt => setter(evt.target.value);\n\nfunction EditTask({ task, cancelEdition, updateTasks }) {\n  const [taskName, setTaskName] = useState(task.name);\n  const [minutes, setMinutes] = useState(Math.floor(task.seconds / 60) % 60);\n  const [hours, setHours] = useState(Math.floor(task.seconds / 60 / 60));\n  const willUnmount = useWillUnmount();\n  const [hasClickedDelete, setHasClickedDelete] = useState(false);\n  const [errorDiv, setErrorMessage] = useErrorMessage();\n\n  function editTask() {\n    axios\n      .patch(`${API_URL}/tasks/`, {\n        old_task: { name: task.name, project: task.project },\n        new_task: {\n          ...task,\n          name: taskName,\n          seconds: hours * 60 * 60 + minutes * 60\n        }\n      })\n      .then(resp => {\n        if (!willUnmount) {\n          cancelEdition();\n        }\n        updateTasks();\n      })\n      .catch(err => {\n        if (err.response && err.response.status === 405) {\n          setErrorMessage(\"A task with that name already exists.\");\n        } else if (err.response && err.response.status === 403) {\n          setErrorMessage(\"Invalid request: this task doesn't exist anymore!\");\n        } else {\n          setErrorMessage(\"Error connecting with the server.\");\n          console.error(err);\n        }\n      });\n  }\n\n  function deleteTask() {\n    axios\n      .post(`${API_URL}/delete-task/`, {\n        name: task.name,\n        project: task.project\n      })\n      .then(resp => {\n        if (!willUnmount) {\n          cancelEdition();\n        }\n        updateTasks(tasks =>\n          tasks.filter(\n            otherTask =>\n              task.name !== otherTask.name || task.project !== otherTask.project\n          )\n        );\n      })\n      .catch(err => {\n        if (err.response && err.response.status === 403) {\n          setErrorMessage(\"Invalid request: the task was already deleted!\");\n        } else {\n          setErrorMessage(\"Error connecting with the server.\");\n          console.error(err);\n        }\n      });\n  }\n\n  const confirmButton = children => (\n    <button className=\"confirm\" onClick={editTask} disabled={!taskName}>\n      {children}\n    </button>\n  );\n\n  return (\n    <div className=\"task\" style={{ \"--task-color\": task.color }}>\n      <div className=\"task-head\">\n        <TaskTimer seconds={task.seconds}>\n          {confirmButton(\n            <img\n              src={`${process.env.PUBLIC_URL}/baseline_edit_white_24dp.png`}\n              alt=\"Edit task\"\n              title=\"Edit task\"\n            />\n          )}\n        </TaskTimer>\n      </div>\n      <div className=\"task-body\">\n        <h3>\n          <input\n            type=\"text\"\n            placeholder=\"Task name\"\n            value={taskName}\n            onChange={_fromEvent(setTaskName)}\n          />\n        </h3>\n        <input\n          type=\"number\"\n          min={0}\n          value={hours}\n          onChange={_fromEvent(setHours)}\n        />\n        :\n        <input\n          type=\"number\"\n          min={0}\n          max={60}\n          value={minutes}\n          onChange={_fromEvent(setMinutes)}\n        />\n        {errorDiv}\n      </div>\n      <div className=\"task-foot\">\n        {confirmButton(\"Edit task\")}\n        <button className=\"cancel\" onClick={cancelEdition}>\n          Cancel\n        </button>\n        <button\n          className=\"delete\"\n          onClick={() => {\n            if (hasClickedDelete) deleteTask();\n            else setHasClickedDelete(true);\n          }}\n        >\n          {!hasClickedDelete ? \"Delete\" : \"Delete?\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default EditTask;\n","import React, { useState, useEffect } from \"react\";\nimport ShowTask from \"./ShowTask\";\nimport EditTask from \"./EditTask\";\n\nfunction Task({ task, updateTasks, selectProject, tasks }) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [isFirstTime, setIsFirstTime] = useState(\n    !Boolean(localStorage.getItem(\"hasShownATask\"))\n  );\n\n  useEffect(() => {\n    if (!isFirstTime) {\n      localStorage.setItem(\"hasShownATask\", \"1\");\n    }\n  }, [isFirstTime]);\n\n  const tasksLength = tasks ? tasks.length : null;\n\n  useEffect(() => {\n    if (tasksLength !== null && tasksLength > 1) {\n      setIsFirstTime(false);\n    }\n  }, [tasksLength]);\n\n  if (isEditing) {\n    return (\n      <EditTask\n        task={task}\n        cancelEdition={() => setIsEditing(false)}\n        updateTasks={updateTasks}\n      />\n    );\n  }\n\n  return (\n    <>\n      {isFirstTime ? (\n        <div\n          className=\"first-time-notice\"\n          style={{ \"--task-color\": task.color }}\n        >\n          Now you can hit play to begin tracking the time you spend on{\" \"}\n          <b>{task.name}</b>.\n        </div>\n      ) : (\n        \"\"\n      )}\n      <ShowTask\n        task={task}\n        editTask={() => {\n          setIsFirstTime(false);\n          setIsEditing(true);\n        }}\n        onPlayStart={() => {\n          setIsFirstTime(false);\n        }}\n        updateTasks={updateTasks}\n        selectProject={selectProject}\n        tasks={tasks}\n      />\n    </>\n  );\n}\n\nexport default Task;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport API_URL from \"../API_URL\";\nimport TaskTimer from \"./TaskTimer\";\nimport { useErrorMessage } from \"../hooks\";\n\nconst _fromEvent = setter => evt => setter(evt.target.value);\n\nconst newProjectColors = [\n  \"#6d7502\",\n  \"#1fad13\",\n  \"#c60d8f\",\n  \"#5577ff\",\n  \"#ff3344\"\n];\n\nfunction CreateTaskForm({\n  projects,\n  projectColors,\n  onCreate,\n  onCancel,\n  isFirstTime\n}) {\n  const [taskName, setTaskName] = useState(\"\");\n  const [selectedProjectName, setSelectedProjectName] = useState(\n    projects[0] || \"\"\n  );\n  const [newProjectName, setNewProjectName] = useState(\"\");\n  const [newProjectColor, setNewProjectColor] = useState(\n    newProjectColors[Math.floor(Math.random() * newProjectColors.length)]\n  );\n\n  const taskColor = selectedProjectName\n    ? projectColors[selectedProjectName]\n    : newProjectColor;\n\n  const [errorDiv, setErrorMessage] = useErrorMessage();\n\n  useEffect(() => {\n    if (projects.length === 0) {\n      setSelectedProjectName(\"\");\n    }\n  }, [projects.length]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    axios\n      .post(`${API_URL}/tasks/`, {\n        name: taskName,\n        project: selectedProjectName || newProjectName,\n        color: taskColor,\n        seconds: 0,\n        timestamp: Date.now()\n      })\n      .then(onCreate)\n      .catch(err => {\n        if (err.response && err.response.status === 403) {\n          setErrorMessage(\"The task already exists!\");\n        } else {\n          setErrorMessage(\"Error connecting with the server.\");\n          console.error(err);\n        }\n      });\n  }\n\n  const createButton = children => (\n    <button\n      className=\"confirm\"\n      disabled={!taskName || !(selectedProjectName || newProjectName)}\n    >\n      {children}\n    </button>\n  );\n\n  return (\n    <form\n      className=\"task\"\n      onSubmit={handleSubmit}\n      style={{ \"--task-color\": taskColor }}\n    >\n      {isFirstTime ? (\n        <div className=\"first-time-notice\">\n          Start by creating a task. Just anything you're working on.\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div className=\"task-head\">\n        <TaskTimer seconds={0}>\n          {createButton(\n            <img\n              src={`${process.env.PUBLIC_URL}/baseline_add_white_24dp.png`}\n              alt=\"Create task\"\n              title=\"Create task\"\n            />\n          )}\n        </TaskTimer>\n      </div>\n      <div className=\"task-body\">\n        <h3>\n          <input\n            type=\"text\"\n            id=\"task-name\"\n            placeholder=\"Task name\"\n            value={taskName}\n            onChange={_fromEvent(setTaskName)}\n          />\n        </h3>\n        {projects.length ? (\n          <>\n            <select\n              id=\"project-name\"\n              value={selectedProjectName}\n              onChange={_fromEvent(setSelectedProjectName)}\n            >\n              {projects.map(project => (\n                <option\n                  key={project}\n                  value={project}\n                  style={{ \"--task-color\": projectColors[project] }}\n                >\n                  {project}\n                </option>\n              ))}\n              <option\n                value=\"\"\n                style={{\n                  \"--task-color\": newProjectColor,\n                  fontStyle: \"italic\"\n                }}\n              >\n                New project\n              </option>\n            </select>\n            <br />\n          </>\n        ) : (\n          \"\"\n        )}\n        {selectedProjectName === \"\" || !projects.length ? (\n          <>\n            <input\n              type=\"text\"\n              id=\"new-project-name\"\n              placeholder=\"Project name\"\n              value={newProjectName}\n              onChange={_fromEvent(setNewProjectName)}\n            />\n            <input\n              type=\"color\"\n              id=\"new-project-color\"\n              value={newProjectColor}\n              onChange={_fromEvent(setNewProjectColor)}\n            />\n          </>\n        ) : (\n          \"\"\n        )}\n        {errorDiv}\n      </div>\n      <div className=\"task-foot\">\n        {createButton(\"Create task\")}\n        <button className=\"cancel\" onClick={onCancel}>\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default CreateTaskForm;\n","import React, { useState, useEffect } from \"react\";\nimport CreateTaskForm from \"./CreateTaskForm\";\n\nexport default function CreateTask({ projects, projectColors, updateTasks }) {\n  const [isFirstTime, setIsFirstTime] = useState(\n    !Boolean(localStorage.getItem(\"hasCreatedATask\"))\n  );\n  const [isCreatingTask, setIsCreatingTask] = useState(isFirstTime);\n\n  useEffect(() => {\n    if (isFirstTime === false) {\n      localStorage.setItem(\"hasCreatedATask\", \"1\");\n    }\n  }, [isFirstTime]);\n\n  const projectsLength = projects ? projects.length : null;\n\n  useEffect(() => {\n    if (projectsLength === 0) {\n      setIsCreatingTask(true);\n    } else if (projectsLength !== null && projectsLength > 0) {\n      setIsFirstTime(false);\n    }\n  }, [projectsLength]);\n\n  if (isCreatingTask && projects) {\n    return (\n      <CreateTaskForm\n        projects={projects}\n        projectColors={projectColors}\n        onCreate={() => {\n          setIsFirstTime(false);\n          setIsCreatingTask(false);\n          updateTasks();\n        }}\n        onCancel={() => setIsCreatingTask(false)}\n        isFirstTime={isFirstTime}\n      />\n    );\n  }\n\n  return (\n    <button\n      className=\"task task-head new-task\"\n      onClick={() => setIsCreatingTask(true)}\n    >\n      New task\n    </button>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\n\nconst _fromEvent = setter => evt => setter(evt.target.value);\n\nfunction SearchBar({ searchQuery, setSearchQuery }) {\n  const inputRef = useRef(null);\n\n  // Use Escape key to clear and focus\n  useEffect(() => {\n    function handleEscape(event) {\n      if (event.key === \"Escape\") {\n        setSearchQuery(\"\");\n        if (inputRef) {\n          inputRef.current.focus();\n        }\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleEscape);\n    return () => window.removeEventListener(\"keydown\", handleEscape);\n  }, [setSearchQuery]);\n\n  // Focus input when searchQuery changes\n  useEffect(() => {\n    if (inputRef) {\n      inputRef.current.focus();\n    }\n  }, [searchQuery]);\n\n  return (\n    <div className=\"search-bar\">\n      <img\n        src={`${process.env.PUBLIC_URL}/baseline_search_black_18dp.png`}\n        alt=\"\"\n        onClick={() => {\n          if (inputRef.current) {\n            inputRef.current.focus();\n          }\n        }}\n      />\n      <input\n        type=\"text\"\n        value={searchQuery}\n        onChange={_fromEvent(setSearchQuery)}\n        ref={inputRef}\n      />\n      <img\n        src={`${process.env.PUBLIC_URL}/baseline_close_black_18dp.png`}\n        alt=\"\"\n        style={{ right: \"2px\" }}\n        onClick={() => {\n          setSearchQuery(\"\");\n        }}\n      />\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React, { useState, useEffect } from \"react\";\n\nfunction LocalStorageNotice() {\n  const [isUnderstood, setIsUnderstood] = useState(\n    Boolean(localStorage.getItem(\"understood-local-storage-notice\"))\n  );\n\n  useEffect(() => {\n    if (isUnderstood) {\n      localStorage.setItem(\"understood-local-storage-notice\", \"1\");\n    }\n  }, [isUnderstood]);\n\n  if (process.env.REACT_APP_API !== undefined) {\n    // If we use a real API, don't show this notice.\n    return <></>;\n  }\n\n  if (isUnderstood) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"local-storage-notice\">\n      <div>\n        This site uses both <b>cookies</b> and <b>localStorage</b> to store your\n        user data (it should be safe unless you decide to clear your cache). Any\n        data you provide is saved on your current browser and device <i>only</i>\n        . The server doesn't store any data whatsoever, so you're adviced to\n        keep regular backups using the Export function.\n      </div>\n      <button onClick={() => setIsUnderstood(true)}>I understand</button>\n    </div>\n  );\n}\n\nexport default LocalStorageNotice;\n","import React from \"react\";\nimport axios from \"axios\";\nimport API_URL from \"../API_URL\";\n\nfunction Import({ updateTasks, setErrorMessage }) {\n  function importTasks() {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \".json\";\n    input.click();\n\n    input.addEventListener(\"change\", readFile);\n\n    function readFile() {\n      if (input.files.length) {\n        const reader = new FileReader();\n        const file = input.files[0];\n        reader.readAsText(file);\n        reader.addEventListener(\"load\", processFile);\n      }\n    }\n\n    function processFile(event) {\n      const file = event.target.result;\n\n      if (!file || !file.length) return;\n\n      let newTasks;\n      try {\n        newTasks = JSON.parse(file);\n      } catch (error) {\n        setErrorMessage(\"The file is invalid or corrupted.\");\n        return;\n      }\n\n      axios\n        .post(`${API_URL}/import-tasks/`, newTasks)\n        .then(result => {\n          updateTasks();\n        })\n        .catch(err => {\n          if (err.response) {\n            setErrorMessage(\"There was an error importing tasks.\");\n          } else {\n            setErrorMessage(\"There was an error connecting to the server.\");\n          }\n        });\n    }\n  }\n\n  return (\n    <button className=\"import-tasks\" onClick={importTasks}>\n      Import\n    </button>\n  );\n}\n\nexport default Import;\n","import React from \"react\";\n\nfunction ExportTasks({ tasks }) {\n  function exportTasks() {\n    const a = document.createElement(\"a\");\n    a.setAttribute(\n      \"href\",\n      \"data:text/plain;charset=utf-u,\" +\n        encodeURIComponent(JSON.stringify(tasks))\n    );\n    a.setAttribute(\"download\", \"Tasks backup.json\");\n    a.click();\n  }\n\n  return (\n    <button className=\"export-tasks\" onClick={exportTasks}>\n      Export\n    </button>\n  );\n}\n\nexport default ExportTasks;\n","import React from \"react\";\nimport ImportTasks from \"./ImportTasks\";\nimport ExportTasks from \"./ExportTasks\";\n\nfunction ButtonBar({ tasks, updateTasks, setErrorMessage }) {\n  return (\n    <div className=\"button-bar task\">\n      <ImportTasks\n        updateTasks={updateTasks}\n        setErrorMessage={setErrorMessage}\n      />\n      <ExportTasks tasks={tasks} />\n    </div>\n  );\n}\n\nexport default ButtonBar;\n","import React, { useState } from \"react\";\nimport Task from \"./Tasks/Task\";\nimport CreateTask from \"./Tasks/CreateTask\";\nimport { useTasks, getProjectsFromTasks, useErrorMessage } from \"./hooks\";\nimport SearchBar from \"./App/SearchBar\";\nimport LocalStorageNotice from \"./App/LocalStorageNotice\";\nimport ButtonBar from \"./App/ButtonBar\";\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [errorDiv, setErrorMessage] = useErrorMessage();\n  const [tasks, updateTasks] = useTasks(searchQuery, setErrorMessage);\n  const [projects, projectColors] = getProjectsFromTasks(tasks);\n\n  return (\n    <div className=\"task-container\">\n      <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\n      <ButtonBar\n        tasks={tasks}\n        updateTasks={updateTasks}\n        setErrorMessage={setErrorMessage}\n      />\n      <CreateTask\n        projects={projects}\n        projectColors={projectColors}\n        updateTasks={updateTasks}\n      />\n      <div style={{ clear: \"both\" }}></div>\n      {errorDiv}\n      {tasks !== null\n        ? tasks.map(task => (\n            <Task\n              key={`${task.project}/${task.name}`}\n              task={task}\n              selectProject={setSearchQuery}\n              updateTasks={updateTasks}\n              tasks={tasks}\n            />\n          ))\n        : \"\"}\n      <div style={{ clear: \"both\" }}></div>\n      <div className=\"footer task\">\n        <LocalStorageNotice />\n        <br />\n        Mauro Cano Brusa (c) 2019.{\" \"}\n        <a href=\"https://github.com/mauroc8/react-time-tracker\">View source</a>.\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}