{"version":3,"sources":["hooks.js","mockAdapter.js","API_URL.js","Tasks/TaskTimer.js","Tasks/ShowTask.js","Tasks/EditTask.js","Tasks/Task.js","Tasks/CreateTaskForm.js","Tasks/CreateTask.js","SearchBar.js","App.js","index.js"],"names":["isTaskEqualTo","task","otherTask","name","project","useWillUnmount","useState","willUnmount","setWillUnmount","useEffect","useErrorMessage","errorMessage","setErrorMessage","isHidden","setIsHidden","errorDiv","className","timeout","setTimeout","clearTimeout","mockAPI","mockAdapter","MockAdapter","axios","delayResponse","saveTasks","tasks","localStorage","setItem","JSON","stringify","parse","getItem","onGet","reply","config","slice","onPost","newTask","data","some","push","onPatch","old_task","new_task","find","undefined","Object","assign","filter","API_URL","Boolean","process","REACT_APP_API","replace","initCanvas","canvas","rect","getBoundingClientRect","width","height","cx","getContext","fillStyle","drawTime","percent","startAngle","Math","PI","endAngle","center","globalAlpha","clearRect","beginPath","moveTo","arc","fill","globalCompositeOperation","TaskTimer","seconds","isTimerRunning","children","startingSeconds","setStartingSeconds","canvasRef","useRef","current","JEST_WORKER_ID","timerIsRunning","requestAnimationFrame","frame","time","dt","lastTime","minutePercent","performance","now","startTimer","drawTimer","ref","zeroPad","number","String","substr","ShowTask","editTask","updateTasks","selectProject","setSeconds","minutes","floor","hours","setIsTimerRunning","startTime","setStartTime","secondsBeforeStart","setSecondsBeforeStart","interval","setInterval","Date","clearInterval","saveTask","useCallback","callback","patch","then","resp","catch","err","response","status","console","error","stopTimer","map","someTask","window","onbeforeunload","evt","draggable","onDragStart","dataTransfer","setData","onDragOver","preventDefault","onDrop","getData","split","other","otherIndex","findIndex","taskIndex","otherTimestamp","length","timestamp","reorderTasks","style","color","onClick","src","alt","title","_fromEvent","setter","target","value","EditTask","cancelEdition","taskName","setTaskName","setMinutes","setHours","hasClickedDelete","setHasClickedDelete","confirmButton","disabled","type","placeholder","onChange","min","max","post","Task","isEditing","setIsEditing","newProjectColors","CreateTaskForm","projects","projectColors","onCreate","onCancel","selectedProjectName","setSelectedProjectName","newProjectName","setNewProjectName","random","newProjectColor","setNewProjectColor","taskColor","createButton","onSubmit","event","id","key","fontStyle","CreateTask","isCreatingTask","setIsCreatingTask","SearchBar","searchQuery","setSearchQuery","inputRef","handleEscape","focus","addEventListener","removeEventListener","App","setTasks","updateCounter","setUpdateCounter","get","sort","taskA","taskB","searchWords","trim","toLowerCase","every","word","includes","updaterFunction","useTasks","create","reduce","getProjectsFromTasks","clear","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72441b1e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"./API_URL\";\r\n\r\nexport const isTaskEqualTo = task => otherTask =>\r\n  task.name === otherTask.name && task.project === otherTask.project;\r\n\r\nexport function formatTaskName(name) {\r\n  // The slash is needed to separate task name from project.\r\n  return name.replace(/\\//g, \"-\");\r\n}\r\n\r\nexport function useWillUnmount() {\r\n  const [willUnmount, setWillUnmount] = useState(false);\r\n\r\n  useEffect(() => {\r\n    return () => setWillUnmount(true);\r\n  }, []);\r\n\r\n  return willUnmount;\r\n}\r\n\r\nexport function useTasks(searchQuery) {\r\n  const willUnmount = useWillUnmount();\r\n  let [tasks, setTasks] = useState(null);\r\n  const [updateCounter, setUpdateCounter] = useState(0);\r\n  const [errorDiv, setErrorMessage] = useErrorMessage();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${API_URL}/tasks/`)\r\n      .then(resp => {\r\n        if (!willUnmount) {\r\n          setTasks(resp.data);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (!willUnmount) {\r\n          if (err.response) {\r\n            setErrorMessage(\"The server responded with an error.\");\r\n          } else {\r\n            setErrorMessage(\r\n              \"Error connecting with the server. Please reload the tab.\"\r\n            );\r\n            console.error(err);\r\n          }\r\n        }\r\n      });\r\n  }, [willUnmount, updateCounter, setErrorMessage]);\r\n\r\n  if (tasks !== null) {\r\n    tasks = tasks.sort((taskA, taskB) => taskB.timestamp - taskA.timestamp);\r\n\r\n    if (searchQuery.length) {\r\n      const searchWords = searchQuery\r\n        .trim()\r\n        .toLowerCase()\r\n        .replace(/\\s+/g, \" \")\r\n        .split(\" \");\r\n\r\n      if (searchWords.length) {\r\n        tasks = tasks.filter(task =>\r\n          searchWords.every(\r\n            word =>\r\n              task.name.toLowerCase().includes(word) ||\r\n              task.project.toLowerCase().includes(word)\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const updateTasks = updaterFunction => {\r\n    if (updaterFunction) {\r\n      // Manually update, to give immediate feedback\r\n      setTasks(updaterFunction(tasks));\r\n      // (But fetch anyway to validate the API did the right thing.)\r\n    }\r\n    setUpdateCounter(updateCounter + 1);\r\n  };\r\n\r\n  return [tasks, updateTasks, errorDiv];\r\n}\r\n\r\nexport function getProjectsFromTasks(tasks) {\r\n  if (tasks === null) {\r\n    return [];\r\n  }\r\n\r\n  const projectColors = Object.create(null);\r\n\r\n  const projects = tasks.reduce((projects, task) => {\r\n    if (projects.includes(task.project)) {\r\n      return projects;\r\n    }\r\n    projectColors[task.project] = task.color;\r\n\r\n    return [...projects, task.project];\r\n  }, []);\r\n\r\n  return [projects, projectColors];\r\n}\r\n\r\nexport function useErrorMessage() {\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isHidden, setIsHidden] = useState(true);\r\n\r\n  const errorDiv = (\r\n    <div className={`error-message ${isHidden ? `hidden` : ``}`}>\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      setIsHidden(false);\r\n\r\n      let timeout = setTimeout(() => {\r\n        setIsHidden(true);\r\n        setErrorMessage(\"\");\r\n        timeout = null;\r\n      }, 3200);\r\n      return () => {\r\n        if (timeout) {\r\n          clearTimeout(timeout);\r\n        }\r\n      };\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  return [errorDiv, setErrorMessage];\r\n}\r\n","import axios from \"axios\";\r\nimport MockAdapter from \"axios-mock-adapter\";\r\nimport { isTaskEqualTo } from \"./hooks\";\r\n\r\nconst mockAPI = \"https://mock.adapter.com\";\r\nconst mockAdapter = new MockAdapter(axios, { delayResponse: 180 });\r\n\r\nfunction getTasks() {\r\n  return JSON.parse(localStorage.getItem(\"tasks\") || \"[]\");\r\n}\r\n\r\nfunction saveTasks(tasks) {\r\n  localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n}\r\n\r\nlet tasks = getTasks();\r\n\r\nmockAdapter.onGet(`${mockAPI}/tasks/`).reply(config => {\r\n  return [200, tasks.slice()];\r\n});\r\n\r\nmockAdapter.onPost(`${mockAPI}/tasks/`).reply(config => {\r\n  const newTask = JSON.parse(config.data);\r\n\r\n  if (tasks.some(isTaskEqualTo(newTask))) {\r\n    return [403, {}];\r\n  }\r\n\r\n  tasks.push(newTask);\r\n  saveTasks(tasks);\r\n  return [200, {}];\r\n});\r\n\r\nmockAdapter.onPatch(`${mockAPI}/tasks/`).reply(config => {\r\n  const { old_task, new_task } = JSON.parse(config.data);\r\n\r\n  const task = tasks.find(isTaskEqualTo(old_task));\r\n\r\n  if (\r\n    !isTaskEqualTo(old_task)(new_task) &&\r\n    tasks.some(isTaskEqualTo(new_task))\r\n  ) {\r\n    // Trying to change task name, but it already exists a task with the new name.\r\n    return [405, {}];\r\n  }\r\n\r\n  if (task === undefined) {\r\n    return [403, {}];\r\n  }\r\n\r\n  Object.assign(task, new_task);\r\n  saveTasks(tasks);\r\n  return [200, {}];\r\n});\r\n\r\nmockAdapter.onPost(`${mockAPI}/delete-task/`).reply(config => {\r\n  const task = JSON.parse(config.data);\r\n\r\n  if (!tasks.some(isTaskEqualTo(task))) {\r\n    return [403, {}];\r\n  }\r\n\r\n  tasks = tasks.filter(otherTask => !isTaskEqualTo(task)(otherTask));\r\n  saveTasks(tasks);\r\n  return [200, {}];\r\n});\r\n\r\nexport { mockAPI };\r\n","import { mockAPI } from \"./mockAdapter\";\r\n\r\nconst usesRealAPI = Boolean(process.env.REACT_APP_API);\r\nconst API_URL = usesRealAPI\r\n  ? process.env.REACT_APP_API.replace(/\\/^/, \"\")\r\n  : mockAPI;\r\n\r\n// If there's no real API, all requests will be sent to the mockAPI url.\r\n// Then the mockAdapter will take care of them.\r\n\r\nexport default API_URL;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nfunction initCanvas(canvas) {\r\n  const rect = canvas.getBoundingClientRect();\r\n  const width = (canvas.width = rect.width);\r\n  const height = (canvas.height = rect.height);\r\n\r\n  const cx = canvas.getContext(\"2d\");\r\n  cx.fillStyle = \"white\";\r\n\r\n  return [cx, width, height];\r\n}\r\n\r\nfunction drawTime(cx, width, height, percent) {\r\n  const startAngle = -Math.PI / 2;\r\n  const endAngle = Math.PI * 2 * percent + startAngle;\r\n  const center = [width / 2, height / 2];\r\n\r\n  cx.globalAlpha = 0.3;\r\n  cx.clearRect(0, 0, width, height);\r\n  cx.beginPath();\r\n  cx.moveTo(...center);\r\n  cx.arc(...center, width / 2, startAngle, endAngle);\r\n  cx.fill();\r\n\r\n  cx.globalAlpha = 1;\r\n  cx.globalCompositeOperation = \"destination-out\";\r\n  cx.beginPath();\r\n  cx.moveTo(...center);\r\n  cx.arc(...center, width / 2 - 4, 0, Math.PI * 2);\r\n  cx.fill();\r\n  cx.globalCompositeOperation = \"source-over\";\r\n}\r\n\r\nfunction startTimer(canvas, startingSeconds) {\r\n  let timerIsRunning = true;\r\n\r\n  const [cx, width, height] = initCanvas(canvas);\r\n\r\n  requestAnimationFrame(frame);\r\n\r\n  let lastTime = performance.now();\r\n  let minutePercent = (startingSeconds % 60) / 60;\r\n\r\n  function frame(time) {\r\n    if (timerIsRunning) {\r\n      requestAnimationFrame(frame);\r\n    }\r\n\r\n    const dt = (time - lastTime) / 1000;\r\n    lastTime = time;\r\n\r\n    minutePercent += dt / 60;\r\n\r\n    drawTime(cx, width, height, minutePercent);\r\n  }\r\n\r\n  return function stopTimer() {\r\n    timerIsRunning = false;\r\n  };\r\n}\r\n\r\nfunction drawTimer(canvas, seconds) {\r\n  const [cx, width, height] = initCanvas(canvas);\r\n  const percent = (seconds % 60) / 60;\r\n\r\n  drawTime(cx, width, height, percent);\r\n}\r\n\r\nfunction TaskTimer({ seconds, isTimerRunning = false, children }) {\r\n  const [startingSeconds, setStartingSeconds] = useState(seconds);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Each minute resets the animation\r\n  useEffect(() => {\r\n    if (seconds % 60 === 0) {\r\n      setStartingSeconds(seconds);\r\n    }\r\n  }, [seconds]);\r\n\r\n  // When timer stops, update starting seconds for next time we hit play\r\n  useEffect(() => {\r\n    if (!isTimerRunning) {\r\n      setStartingSeconds(seconds);\r\n    }\r\n  }, [isTimerRunning, seconds]);\r\n\r\n  // Draw\r\n  useEffect(() => {\r\n    if (canvasRef.current && process.env.JEST_WORKER_ID === undefined) {\r\n      if (isTimerRunning) {\r\n        return startTimer(canvasRef.current, startingSeconds);\r\n      } else {\r\n        drawTimer(canvasRef.current, startingSeconds);\r\n      }\r\n    }\r\n  }, [isTimerRunning, startingSeconds]);\r\n\r\n  return (\r\n    <div className=\"task-timer-container\">\r\n      <canvas ref={canvasRef} className=\"task-timer\"></canvas>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskTimer;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../API_URL\";\r\nimport TaskTimer from \"./TaskTimer\";\r\nimport { isTaskEqualTo, useErrorMessage, useWillUnmount } from \"../hooks\";\r\n\r\nconst zeroPad = number => {\r\n  return String(100 + (number % 100)).substr(1);\r\n};\r\n\r\nfunction ShowTask({ task, editTask, updateTasks, selectProject, tasks }) {\r\n  const [seconds, setSeconds] = useState(task.seconds);\r\n  const minutes = Math.floor(seconds / 60) % 60;\r\n  const hours = Math.floor(seconds / 60 / 60);\r\n\r\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [secondsBeforeStart, setSecondsBeforeStart] = useState(task.seconds);\r\n\r\n  const [errorDiv, setErrorMessage] = useErrorMessage();\r\n  const willUnmount = useWillUnmount();\r\n\r\n  // Clock tick\r\n  useEffect(() => {\r\n    if (isTimerRunning) {\r\n      const interval = setInterval(() => {\r\n        setSeconds(\r\n          Math.floor(secondsBeforeStart + Date.now() / 1000 - startTime)\r\n        );\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    } else {\r\n      setSeconds(secondsBeforeStart);\r\n    }\r\n  }, [isTimerRunning, secondsBeforeStart, startTime]);\r\n\r\n  useEffect(() => {\r\n    if (isTimerRunning) {\r\n      setStartTime(Date.now() / 1000);\r\n    }\r\n  }, [isTimerRunning]);\r\n\r\n  useEffect(() => {\r\n    if (!isTimerRunning) {\r\n      setSecondsBeforeStart(task.seconds);\r\n    }\r\n  }, [isTimerRunning, task.seconds]);\r\n\r\n  const saveTask = useCallback(\r\n    callback => {\r\n      axios\r\n        .patch(`${API_URL}/tasks/`, {\r\n          old_task: { name: task.name, project: task.project },\r\n          new_task: { ...task, seconds }\r\n        })\r\n        .then(resp => {\r\n          if (callback) {\r\n            callback();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (err.response && err.response.status === 405) {\r\n            setErrorMessage(\r\n              \"Somehow, we tried to change this task name to an invalid one.\"\r\n            );\r\n          } else if (err.response && err.response.status === 403) {\r\n            setErrorMessage(\r\n              \"Invalid request: this task doesn't exist anymore.\"\r\n            );\r\n          } else {\r\n            setErrorMessage(\"Error connecting with the server.\");\r\n            console.error(err);\r\n          }\r\n        });\r\n    },\r\n    [task, seconds, setErrorMessage]\r\n  );\r\n\r\n  // Stop timer and save result\r\n  function stopTimer() {\r\n    saveTask(() => {\r\n      updateTasks(tasks =>\r\n        tasks.map(someTask => {\r\n          if (\r\n            someTask.name === task.name &&\r\n            someTask.project === task.project\r\n          ) {\r\n            return { ...task, seconds };\r\n          }\r\n          return someTask;\r\n        })\r\n      );\r\n      if (!willUnmount) {\r\n        setIsTimerRunning(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Save task every minute\r\n  useEffect(() => {\r\n    if (isTimerRunning && seconds !== task.seconds && seconds % 60 === 0) {\r\n      saveTask();\r\n    }\r\n  }, [isTimerRunning, saveTask, seconds, task.seconds]);\r\n\r\n  function reorderTasks(other) {\r\n    const otherIndex = tasks.findIndex(isTaskEqualTo(other));\r\n    const taskIndex = tasks.findIndex(isTaskEqualTo(task));\r\n\r\n    if (otherIndex === -1 || taskIndex === -1) return;\r\n\r\n    let otherTimestamp;\r\n\r\n    if (otherIndex < taskIndex) {\r\n      otherTimestamp =\r\n        taskIndex >= tasks.length - 1\r\n          ? task.timestamp - 9000\r\n          : tasks[taskIndex + 1].timestamp;\r\n    } else {\r\n      otherTimestamp =\r\n        taskIndex > 0 ? tasks[taskIndex - 1].timestamp : Date.now();\r\n    }\r\n\r\n    const timestamp = Math.floor((task.timestamp + otherTimestamp) / 2);\r\n    const otherTask = tasks.find(isTaskEqualTo(other));\r\n\r\n    axios\r\n      .patch(`${API_URL}/tasks/`, {\r\n        old_task: other,\r\n        new_task: { ...otherTask, timestamp }\r\n      })\r\n      .then(resp => {\r\n        updateTasks();\r\n      })\r\n      .catch(err => {\r\n        if (err.response && err.response.status === 405) {\r\n          setErrorMessage(\r\n            \"Somehow, we tried to change this task name to an invalid one.\"\r\n          );\r\n        } else if (err.response && err.response.status === 403) {\r\n          setErrorMessage(\"Invalid request: This task doesn't exist anymore.\");\r\n        } else {\r\n          setErrorMessage(\"Error connecting with the server.\");\r\n          console.error(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  // Ask confirmation when user closes tab\r\n  useEffect(() => {\r\n    if (isTimerRunning) {\r\n      window.onbeforeunload = evt => {\r\n        return \"There's a task running. You'll loose the timer progress.\";\r\n      };\r\n\r\n      return () => (window.onbeforeunload = undefined);\r\n    }\r\n  }, [isTimerRunning]);\r\n\r\n  return (\r\n    <div\r\n      draggable\r\n      onDragStart={evt => {\r\n        evt.dataTransfer.setData(\"text/plain\", `${task.name}/${task.project}`);\r\n      }}\r\n      onDragOver={evt => evt.preventDefault()}\r\n      onDrop={evt => {\r\n        evt.preventDefault();\r\n        const [name, project] = evt.dataTransfer.getData(\"text\").split(\"/\");\r\n        reorderTasks({ name, project }, task);\r\n      }}\r\n      className=\"task\"\r\n      style={{\r\n        \"--task-color\": task.color\r\n      }}\r\n    >\r\n      <div className=\"task-head\">\r\n        <TaskTimer seconds={seconds} isTimerRunning={isTimerRunning}>\r\n          {!isTimerRunning ? (\r\n            <button className=\"start\" onClick={() => setIsTimerRunning(true)}>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/baseline_play_arrow_white_24dp.png`}\r\n                alt=\"Start timer\"\r\n                title=\"Start timer\"\r\n              />\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"stop\"\r\n              onClick={() => {\r\n                stopTimer();\r\n              }}\r\n            >\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/baseline_pause_white_24dp.png`}\r\n                alt=\"Stop timer\"\r\n                title=\"Stop timer\"\r\n              />\r\n            </button>\r\n          )}\r\n        </TaskTimer>\r\n      </div>\r\n      <div className=\"task-body\">\r\n        <div className=\"float-left\">\r\n          <h3>{task.name}</h3>\r\n          {zeroPad(hours)}:{zeroPad(minutes)}\r\n          {\" - \"}\r\n          <span\r\n            className=\"clickable\"\r\n            onClick={() => selectProject(task.project)}\r\n          >\r\n            {task.project}\r\n          </span>\r\n          {errorDiv}\r\n        </div>\r\n        <div className=\"task-foot\">\r\n          <button\r\n            className=\"edit\"\r\n            onClick={() => {\r\n              if (isTimerRunning) {\r\n                stopTimer();\r\n              }\r\n              editTask();\r\n            }}\r\n          >\r\n            Edit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowTask;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../API_URL\";\r\nimport { useWillUnmount, useErrorMessage } from \"../hooks\";\r\nimport TaskTimer from \"./TaskTimer\";\r\n\r\nconst _fromEvent = setter => evt => setter(evt.target.value);\r\n\r\nfunction EditTask({ task, cancelEdition, updateTasks }) {\r\n  const [taskName, setTaskName] = useState(task.name);\r\n  const [minutes, setMinutes] = useState(Math.floor(task.seconds / 60) % 60);\r\n  const [hours, setHours] = useState(Math.floor(task.seconds / 60 / 60));\r\n  const willUnmount = useWillUnmount();\r\n  const [hasClickedDelete, setHasClickedDelete] = useState(false);\r\n  const [errorDiv, setErrorMessage] = useErrorMessage();\r\n\r\n  function editTask() {\r\n    axios\r\n      .patch(`${API_URL}/tasks/`, {\r\n        old_task: { name: task.name, project: task.project },\r\n        new_task: {\r\n          ...task,\r\n          name: taskName,\r\n          seconds: hours * 60 * 60 + minutes * 60\r\n        }\r\n      })\r\n      .then(resp => {\r\n        if (!willUnmount) {\r\n          cancelEdition();\r\n        }\r\n        updateTasks();\r\n      })\r\n      .catch(err => {\r\n        if (err.response && err.response.status === 405) {\r\n          setErrorMessage(\"A task with that name already exists.\");\r\n        } else if (err.response && err.response.status === 403) {\r\n          setErrorMessage(\"Invalid request: this task doesn't exist anymore!\");\r\n        } else {\r\n          setErrorMessage(\"Error connecting with the server.\");\r\n          console.error(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  function deleteTask() {\r\n    axios\r\n      .post(`${API_URL}/delete-task/`, {\r\n        name: task.name,\r\n        project: task.project\r\n      })\r\n      .then(resp => {\r\n        if (!willUnmount) {\r\n          cancelEdition();\r\n        }\r\n        updateTasks(tasks =>\r\n          tasks.filter(\r\n            otherTask =>\r\n              task.name !== otherTask.name || task.project !== otherTask.project\r\n          )\r\n        );\r\n      })\r\n      .catch(err => {\r\n        if (err.response && err.response.status === 403) {\r\n          setErrorMessage(\"Invalid request: the task was already deleted!\");\r\n        } else {\r\n          setErrorMessage(\"Error connecting with the server.\");\r\n          console.error(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  const confirmButton = children => (\r\n    <button className=\"confirm\" onClick={editTask} disabled={!taskName}>\r\n      {children}\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <div className=\"task\" style={{ \"--task-color\": task.color }}>\r\n      <div className=\"task-head\">\r\n        <TaskTimer seconds={task.seconds}>\r\n          {confirmButton(\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/baseline_edit_white_24dp.png`}\r\n              alt=\"Edit task\"\r\n              title=\"Edit task\"\r\n            />\r\n          )}\r\n        </TaskTimer>\r\n      </div>\r\n      <div className=\"task-body\">\r\n        <h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Task name\"\r\n            value={taskName}\r\n            onChange={_fromEvent(setTaskName)}\r\n          />\r\n        </h3>\r\n        <input\r\n          type=\"number\"\r\n          min={0}\r\n          value={hours}\r\n          onChange={_fromEvent(setHours)}\r\n        />\r\n        :\r\n        <input\r\n          type=\"number\"\r\n          min={0}\r\n          max={60}\r\n          value={minutes}\r\n          onChange={_fromEvent(setMinutes)}\r\n        />\r\n        {errorDiv}\r\n      </div>\r\n      <div className=\"task-foot\">\r\n        {confirmButton(\"Edit task\")}\r\n        <button className=\"cancel\" onClick={cancelEdition}>\r\n          Cancel\r\n        </button>\r\n        <button\r\n          className=\"delete\"\r\n          onClick={() => {\r\n            if (hasClickedDelete) deleteTask();\r\n            else setHasClickedDelete(true);\r\n          }}\r\n        >\r\n          {!hasClickedDelete ? \"Delete\" : \"Delete?\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditTask;\r\n","import React, { useState } from \"react\";\r\nimport ShowTask from \"./ShowTask\";\r\nimport EditTask from \"./EditTask\";\r\n\r\nfunction Task({ task, updateTasks, selectProject, tasks }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <EditTask\r\n        task={task}\r\n        cancelEdition={() => setIsEditing(false)}\r\n        updateTasks={updateTasks}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ShowTask\r\n      task={task}\r\n      editTask={() => setIsEditing(true)}\r\n      updateTasks={updateTasks}\r\n      selectProject={selectProject}\r\n      tasks={tasks}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../API_URL\";\r\nimport TaskTimer from \"./TaskTimer\";\r\nimport { useErrorMessage } from \"../hooks\";\r\n\r\nconst _fromEvent = setter => evt => setter(evt.target.value);\r\n\r\nconst newProjectColors = [\r\n  \"#6d7502\",\r\n  \"#1fad13\",\r\n  \"#c60d8f\",\r\n  \"#5577ff\",\r\n  \"#ff3344\"\r\n];\r\n\r\nfunction CreateTaskForm({ projects, projectColors, onCreate, onCancel }) {\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [selectedProjectName, setSelectedProjectName] = useState(\r\n    projects[0] || \"\"\r\n  );\r\n  const [newProjectName, setNewProjectName] = useState(\"\");\r\n  const [newProjectColor, setNewProjectColor] = useState(\r\n    newProjectColors[Math.floor(Math.random() * newProjectColors.length)]\r\n  );\r\n\r\n  const taskColor = selectedProjectName\r\n    ? projectColors[selectedProjectName]\r\n    : newProjectColor;\r\n\r\n  const [errorDiv, setErrorMessage] = useErrorMessage();\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    axios\r\n      .post(`${API_URL}/tasks/`, {\r\n        name: taskName,\r\n        project: selectedProjectName || newProjectName,\r\n        color: taskColor,\r\n        seconds: 0,\r\n        timestamp: Date.now()\r\n      })\r\n      .then(onCreate)\r\n      .catch(err => {\r\n        if (err.response && err.response.status === 403) {\r\n          setErrorMessage(\"The task already exists!\");\r\n        } else {\r\n          setErrorMessage(\"Error connecting with the server.\");\r\n          console.error(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  const createButton = children => (\r\n    <button\r\n      className=\"confirm\"\r\n      disabled={!taskName || !(selectedProjectName || newProjectName)}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <form\r\n      className=\"task\"\r\n      onSubmit={handleSubmit}\r\n      style={{ \"--task-color\": taskColor }}\r\n    >\r\n      <div className=\"task-head\">\r\n        <TaskTimer seconds={0}>\r\n          {createButton(\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/baseline_add_white_24dp.png`}\r\n              alt=\"Create task\"\r\n              title=\"Create task\"\r\n            />\r\n          )}\r\n        </TaskTimer>\r\n      </div>\r\n      <div className=\"task-body\">\r\n        <h3>\r\n          <input\r\n            type=\"text\"\r\n            id=\"task-name\"\r\n            placeholder=\"Task name\"\r\n            value={taskName}\r\n            onChange={_fromEvent(setTaskName)}\r\n          />\r\n        </h3>\r\n        {projects.length ? (\r\n          <>\r\n            <select\r\n              id=\"project-name\"\r\n              value={selectedProjectName}\r\n              onChange={_fromEvent(setSelectedProjectName)}\r\n            >\r\n              {projects.map(project => (\r\n                <option\r\n                  key={project}\r\n                  value={project}\r\n                  style={{ \"--task-color\": projectColors[project] }}\r\n                >\r\n                  {project}\r\n                </option>\r\n              ))}\r\n              <option\r\n                value=\"\"\r\n                style={{\r\n                  \"--task-color\": newProjectColor,\r\n                  fontStyle: \"italic\"\r\n                }}\r\n              >\r\n                New project\r\n              </option>\r\n            </select>\r\n            <br />\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {selectedProjectName === \"\" ? (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              id=\"new-project-name\"\r\n              placeholder=\"Project name\"\r\n              value={newProjectName}\r\n              onChange={_fromEvent(setNewProjectName)}\r\n            />\r\n            <input\r\n              type=\"color\"\r\n              id=\"new-project-color\"\r\n              value={newProjectColor}\r\n              onChange={_fromEvent(setNewProjectColor)}\r\n            />\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {errorDiv}\r\n      </div>\r\n      <div className=\"task-foot\">\r\n        {createButton(\"Create task\")}\r\n        <button className=\"cancel\" onClick={onCancel}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreateTaskForm;\r\n","import React, { useState } from \"react\";\r\nimport CreateTaskForm from \"./CreateTaskForm\";\r\n\r\nexport default function CreateTask({ projects, projectColors, updateTasks }) {\r\n  const [isCreatingTask, setIsCreatingTask] = useState(false);\r\n\r\n  if (isCreatingTask) {\r\n    return (\r\n      <CreateTaskForm\r\n        projects={projects}\r\n        projectColors={projectColors}\r\n        onCreate={() => {\r\n          setIsCreatingTask(false);\r\n          updateTasks();\r\n        }}\r\n        onCancel={() => setIsCreatingTask(false)}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className=\"task task-head new-task\"\r\n      onClick={() => setIsCreatingTask(true)}\r\n    >\r\n      New task\r\n    </button>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nconst _fromEvent = setter => evt => setter(evt.target.value);\r\n\r\nfunction SearchBar({ searchQuery, setSearchQuery }) {\r\n  const inputRef = useRef(null);\r\n\r\n  // Use Escape key to clear and focus\r\n  useEffect(() => {\r\n    function handleEscape(event) {\r\n      if (event.key === \"Escape\") {\r\n        setSearchQuery(\"\");\r\n        if (inputRef) {\r\n          inputRef.current.focus();\r\n        }\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"keydown\", handleEscape);\r\n    return () => window.removeEventListener(\"keydown\", handleEscape);\r\n  }, [setSearchQuery]);\r\n\r\n  // Focus input when searchQuery changes\r\n  useEffect(() => {\r\n    if (inputRef) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <input\r\n        type=\"text\"\r\n        value={searchQuery}\r\n        onChange={_fromEvent(setSearchQuery)}\r\n        ref={inputRef}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { useState } from \"react\";\r\nimport Task from \"./Tasks/Task\";\r\nimport CreateTask from \"./Tasks/CreateTask\";\r\nimport { useTasks, getProjectsFromTasks } from \"./hooks\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nfunction App() {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [tasks, updateTasks, errorDiv] = useTasks(searchQuery);\r\n  const [projects, projectColors] = getProjectsFromTasks(tasks);\r\n\r\n  return (\r\n    <div className=\"task-container\">\r\n      <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n      <CreateTask\r\n        projects={projects}\r\n        projectColors={projectColors}\r\n        updateTasks={updateTasks}\r\n      />\r\n      {errorDiv}\r\n      {tasks !== null\r\n        ? tasks.map(task => (\r\n            <Task\r\n              key={`${task.project}/${task.name}`}\r\n              task={task}\r\n              selectProject={setSearchQuery}\r\n              updateTasks={updateTasks}\r\n              tasks={tasks}\r\n            />\r\n          ))\r\n        : \"\"}\r\n      <div style={{ clear: \"both\" }}></div>\r\n      <div className=\"footer task\">\r\n        Mauro Cano Brusa (c) 2019\r\n        <br />\r\n        This app uses localStorage: all the data is saved in your computer.\r\n        Don't use it to store sensitive information.{\" \"}\r\n        <a href=\"https://github.com/mauroc8/react-time-tracker\">View source</a>.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}