{"version":3,"sources":["hooks.js","mockAdapter.js","API_URL.js","Tasks/TaskTimer.js","Tasks/ShowTask.js","Tasks/EditTask.js","Tasks/Task.js","Tasks/CreateTaskForm.js","Tasks/CreateTask.js","App/SearchBar.js","App/LocalStorageNotice.js","App/ImportTasks.js","App/ExportTasks.js","App/ButtonBar.js","App.js","index.js"],"names":["isTaskEqualTo","task","otherTask","name","project","useWillUnmount","useState","willUnmount","setWillUnmount","useEffect","useErrorMessage","errorMessage","setErrorMessage","isHidden","setIsHidden","errorDiv","className","timeout","setTimeout","clearTimeout","mockAPI","mockAdapter","MockAdapter","axios","delayResponse","saveTasks","tasks","localStorage","setItem","JSON","stringify","expirationDate","Date","setFullYear","getFullYear","document","cookie","escape","toGMTString","setTasksInCookies","getItem","parse","match","json","unescape","getTasksFromCookies","onGet","reply","config","slice","onPost","newTask","data","some","push","onPatch","old_task","new_task","find","undefined","Object","assign","filter","newTasks","concat","API_URL","Boolean","process","REACT_APP_API","replace","initCanvas","canvas","rect","getBoundingClientRect","width","height","cx","getContext","fillStyle","drawTime","percent","startAngle","Math","PI","endAngle","center","globalAlpha","clearRect","beginPath","moveTo","arc","fill","globalCompositeOperation","TaskTimer","seconds","isTimerRunning","children","startingSeconds","setStartingSeconds","canvasRef","useRef","current","JEST_WORKER_ID","timerIsRunning","requestAnimationFrame","frame","time","dt","lastTime","minutePercent","performance","now","startTimer","drawTimer","ref","zeroPad","number","String","substr","ShowTask","editTask","updateTasks","selectProject","setSeconds","minutes","floor","hours","setIsTimerRunning","startTime","setStartTime","secondsBeforeStart","setSecondsBeforeStart","interval","setInterval","clearInterval","saveTask","useCallback","callback","patch","then","resp","catch","err","response","status","console","error","stopTimer","map","someTask","window","onbeforeunload","evt","draggable","onDragStart","dataTransfer","setData","onDragOver","preventDefault","onDrop","getData","split","other","otherIndex","findIndex","taskIndex","otherTimestamp","length","timestamp","reorderTasks","style","color","onClick","src","alt","title","_fromEvent","setter","target","value","EditTask","cancelEdition","taskName","setTaskName","setMinutes","setHours","hasClickedDelete","setHasClickedDelete","confirmButton","disabled","type","placeholder","onChange","min","max","post","Task","isEditing","setIsEditing","isFirstTime","setIsFirstTime","tasksLength","newProjectColors","CreateTaskForm","projects","projectColors","onCreate","onCancel","selectedProjectName","setSelectedProjectName","newProjectName","setNewProjectName","random","newProjectColor","setNewProjectColor","taskColor","createButton","onSubmit","event","id","key","fontStyle","CreateTask","isCreatingTask","setIsCreatingTask","projectsLength","SearchBar","searchQuery","setSearchQuery","inputRef","handleEscape","focus","addEventListener","removeEventListener","LocalStorageNotice","isUnderstood","setIsUnderstood","Import","input","createElement","processFile","file","result","accept","click","files","reader","FileReader","readAsText","ExportTasks","a","setAttribute","encodeURIComponent","ButtonBar","ImportTasks","App","setTasks","updateCounter","setUpdateCounter","get","sort","taskA","taskB","searchWords","trim","toLowerCase","every","word","includes","updaterFunction","useTasks","create","reduce","getProjectsFromTasks","clear","href","ReactDOM","render","getElementById"],"mappings":"+QAIaA,EAAgB,SAAAC,GAAI,OAAI,SAAAC,GAAS,OAC5CD,EAAKE,OAASD,EAAUC,MAAQF,EAAKG,UAAYF,EAAUE,UAOtD,SAASC,IAAkB,IAAD,EACOC,oBAAS,GADhB,mBACxBC,EADwB,KACXC,EADW,KAO/B,OAJAC,qBAAU,WACR,OAAO,kBAAMD,GAAe,MAC3B,IAEID,EAmFF,SAASG,IAAmB,IAAD,EACQJ,mBAAS,IADjB,mBACzBK,EADyB,KACXC,EADW,OAEAN,oBAAS,GAFT,mBAEzBO,EAFyB,KAEfC,EAFe,KAI1BC,EACJ,yBAAKC,UAAS,wBAAmBH,EAAQ,cACtCF,GAqBL,OAjBAF,qBAAU,WACR,GAAIE,EAAc,CAChBG,GAAY,GAEZ,IAAIG,EAAUC,YAAW,WACvBJ,GAAY,GACZF,EAAgB,IAChBK,EAAU,OACT,MACH,OAAO,WACDA,GACFE,aAAaF,OAIlB,CAACN,IAEG,CAACI,EAAUH,GC7HpB,IAAMQ,EAAU,2BACVC,EAAc,IAAIC,IAAYC,IAAO,CAAEC,cAAe,MAW5D,SAASC,EAAUC,GACjBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUJ,IAW/C,SAA2BA,GACzB,IAAMK,EAAiB,IAAIC,KAC3BD,EAAeE,YAAYF,EAAeG,cAAgB,GAC1DC,SAASC,OAAT,gBAA2BC,OACzBR,KAAKC,UAAUJ,IADjB,oBAEaK,EAAeO,eAf5BC,CAAkBb,GAkBpB,IAAIA,EA5BEC,aAAaa,QAAQ,SAChBX,KAAKY,MAAMd,aAAaa,QAAQ,UAY3C,WACE,IACME,EADSP,SAASC,OACHM,MAAM,iBACrBC,EAAOD,GAASE,SAASF,EAAM,IACrC,OAAOC,GAAQd,KAAKY,MAAME,GAbjBE,IAAyB,GA0BpCxB,EAAYyB,MAAZ,UAAqB1B,EAArB,YAAuC2B,OAAM,SAAAC,GAC3C,MAAO,CAAC,IAAKtB,EAAMuB,YAGrB5B,EAAY6B,OAAZ,UAAsB9B,EAAtB,YAAwC2B,OAAM,SAAAC,GAC5C,IAAMG,EAAUtB,KAAKY,MAAMO,EAAOI,MAElC,OAAI1B,EAAM2B,KAAKrD,EAAcmD,IACpB,CAAC,IAAK,KAGfzB,EAAM4B,KAAKH,GACX1B,EAAUC,GACH,CAAC,IAAK,QAGfL,EAAYkC,QAAZ,UAAuBnC,EAAvB,YAAyC2B,OAAM,SAAAC,GAAW,IAAD,EACxBnB,KAAKY,MAAMO,EAAOI,MAAzCI,EAD+C,EAC/CA,SAAUC,EADqC,EACrCA,SAEZxD,EAAOyB,EAAMgC,KAAK1D,EAAcwD,IAEtC,OACGxD,EAAcwD,EAAdxD,CAAwByD,IACzB/B,EAAM2B,KAAKrD,EAAcyD,IAGlB,CAAC,IAAK,SAGFE,IAAT1D,EACK,CAAC,IAAK,KAGf2D,OAAOC,OAAO5D,EAAMwD,GACpBhC,EAAUC,GACH,CAAC,IAAK,QAGfL,EAAY6B,OAAZ,UAAsB9B,EAAtB,kBAA8C2B,OAAM,SAAAC,GAClD,IAAM/C,EAAO4B,KAAKY,MAAMO,EAAOI,MAE/B,OAAK1B,EAAM2B,KAAKrD,EAAcC,KAK9BwB,EADAC,EAAQA,EAAMoC,QAAO,SAAA5D,GAAS,OAAKF,EAAcC,EAAdD,CAAoBE,OAEhD,CAAC,IAAK,KALJ,CAAC,IAAK,OAQjBmB,EAAY6B,OAAZ,UAAsB9B,EAAtB,mBAA+C2B,OAAM,SAAAC,GACnD,IAAMe,EAAWlC,KAAKY,MAAMO,EAAOI,MAOnC,OADA3B,EAJAC,EAAQA,EACLoC,QAAO,SAAA7D,GAAI,OAAK8D,EAASV,KAAKrD,EAAcC,OAC5C+D,OAAOD,IAGH,CAAC,IAAK,OC9Ff,IAQeE,EARKC,QAAQC,iEAAYC,eAEpCD,iEAAYC,cAAcC,QAAQ,MAAO,IACzCjD,ECHJ,SAASkD,EAAWC,GAClB,IAAMC,EAAOD,EAAOE,wBACdC,EAASH,EAAOG,MAAQF,EAAKE,MAC7BC,EAAUJ,EAAOI,OAASH,EAAKG,OAE/BC,EAAKL,EAAOM,WAAW,MAG7B,OAFAD,EAAGE,UAAY,QAER,CAACF,EAAIF,EAAOC,GAGrB,SAASI,EAASH,EAAIF,EAAOC,EAAQK,GACnC,IAAMC,GAAcC,KAAKC,GAAK,EACxBC,EAAqB,EAAVF,KAAKC,GAASH,EAAUC,EACnCI,EAAS,CAACX,EAAQ,EAAGC,EAAS,GAEpCC,EAAGU,YAAc,GACjBV,EAAGW,UAAU,EAAG,EAAGb,EAAOC,GAC1BC,EAAGY,YACHZ,EAAGa,OAAH,MAAAb,EAAaS,GACbT,EAAGc,IAAH,MAAAd,EAAUS,EAAP,OAAD,CAAgBX,EAAQ,EAAGO,EAAYG,KACzCR,EAAGe,OAEHf,EAAGU,YAAc,EACjBV,EAAGgB,yBAA2B,kBAC9BhB,EAAGY,YACHZ,EAAGa,OAAH,MAAAb,EAAaS,GACbT,EAAGc,IAAH,MAAAd,EAAUS,EAAP,OAAD,CAAgBX,EAAQ,EAAI,EAAG,EAAa,EAAVQ,KAAKC,MACzCP,EAAGe,OACHf,EAAGgB,yBAA2B,cA2EjBC,MArCf,YAAmE,IAA9CC,EAA6C,EAA7CA,QAA6C,IAApCC,sBAAoC,SAAZC,EAAY,EAAZA,SAAY,EAClB1F,mBAASwF,GADS,mBACzDG,EADyD,KACxCC,EADwC,KAE1DC,EAAYC,iBAAO,MA2BzB,OAxBA3F,qBAAU,WACJqF,EAAU,KAAO,GACnBI,EAAmBJ,KAEpB,CAACA,IAGJrF,qBAAU,WACHsF,GACHG,EAAmBJ,KAEpB,CAACC,EAAgBD,IAGpBrF,qBAAU,WACR,GAAI0F,EAAUE,cAA0C1C,IAA/BQ,iEAAYmC,eAA8B,CACjE,GAAIP,EACF,OAzDR,SAAoBxB,EAAQ0B,GAC1B,IAAIM,GAAiB,EADsB,EAGfjC,EAAWC,GAHI,mBAGpCK,EAHoC,KAGhCF,EAHgC,KAGzBC,EAHyB,KAK3C6B,uBAKA,SAASC,EAAMC,GACTH,GACFC,sBAAsBC,GAGxB,IAAME,GAAMD,EAAOE,GAAY,IAC/BA,EAAWF,EAIX3B,EAASH,EAAIF,EAAOC,EAFpBkC,GAAiBF,EAAK,OAXxB,IAAIC,EAAWE,YAAYC,MACvBF,EAAiBZ,EAAkB,GAAM,GAe7C,OAAO,WACLM,GAAiB,GAiCNS,CAAWb,EAAUE,QAASJ,IA7B7C,SAAmB1B,EAAQuB,GAAU,IAAD,EACNxB,EAAWC,GADL,mBAIlCQ,EAJkC,eAEjBe,EAAU,GAAM,IA6B3BmB,CAAUd,EAAUE,QAASJ,MAGhC,CAACF,EAAgBE,IAGlB,yBAAKjF,UAAU,wBACb,4BAAQkG,IAAKf,EAAWnF,UAAU,eACjCgF,I,ykBC/FP,IAAMmB,EAAU,SAAAC,GACd,OAAOC,OAAO,IAAOD,EAAS,KAAME,OAAO,IAmO9BC,MAhOf,YAA0E,IAAtDtH,EAAqD,EAArDA,KAAMuH,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,cAAehG,EAAS,EAATA,MAAS,EACzCpB,mBAASL,EAAK6F,SAD2B,mBAChEA,EADgE,KACvD6B,EADuD,KAEjEC,EAAU1C,KAAK2C,MAAM/B,EAAU,IAAM,GACrCgC,EAAQ5C,KAAK2C,MAAM/B,EAAU,GAAK,IAH+B,EAK3BxF,oBAAS,GALkB,mBAKhEyF,EALgE,KAKhDgC,EALgD,OAMrCzH,mBAAS,MAN4B,mBAMhE0H,EANgE,KAMrDC,EANqD,OAOnB3H,mBAASL,EAAK6F,SAPK,mBAOhEoC,EAPgE,KAO5CC,EAP4C,OASnCzH,IATmC,mBAShEK,EATgE,KAStDH,EATsD,KAUjEL,EAAcF,IAGpBI,qBAAU,WACR,GAAIsF,EAAgB,CAClB,IAAMqC,EAAWC,aAAY,WAC3BV,EACEzC,KAAK2C,MAAMK,EAAqBlG,KAAK+E,MAAQ,IAAOiB,MAErD,KAEH,OAAO,kBAAMM,cAAcF,IAE3BT,EAAWO,KAEZ,CAACnC,EAAgBmC,EAAoBF,IAExCvH,qBAAU,WACJsF,GACFkC,EAAajG,KAAK+E,MAAQ,OAE3B,CAAChB,IAEJtF,qBAAU,WACHsF,GACHoC,EAAsBlI,EAAK6F,WAE5B,CAACC,EAAgB9F,EAAK6F,UAEzB,IAAMyC,EAAWC,uBACf,SAAAC,GACElH,IACGmH,MADH,UACYzE,EADZ,WAC8B,CAC1BT,SAAU,CAAErD,KAAMF,EAAKE,KAAMC,QAASH,EAAKG,SAC3CqD,SAAS,EAAD,GAAOxD,EAAP,CAAa6F,cAEtB6C,MAAK,SAAAC,GACAH,GACFA,OAGHI,OAAM,SAAAC,GACDA,EAAIC,UAAoC,MAAxBD,EAAIC,SAASC,OAC/BpI,EACE,iEAEOkI,EAAIC,UAAoC,MAAxBD,EAAIC,SAASC,OACtCpI,EACE,sDAGFA,EAAgB,qCAChBqI,QAAQC,MAAMJ,SAItB,CAAC7I,EAAM6F,EAASlF,IAIlB,SAASuI,IACPZ,GAAS,WACPd,GAAY,SAAA/F,GAAK,OACfA,EAAM0H,KAAI,SAAAC,GACR,OACEA,EAASlJ,OAASF,EAAKE,MACvBkJ,EAASjJ,UAAYH,EAAKG,QAEnB,EAAP,GAAYH,EAAZ,CAAkB6F,YAEbuD,QAGN9I,GACHwH,GAAkB,MAkExB,OA5DAtH,qBAAU,WACJsF,GAAkBD,IAAY7F,EAAK6F,SAAWA,EAAU,KAAO,GACjEyC,MAED,CAACxC,EAAgBwC,EAAUzC,EAAS7F,EAAK6F,UA8C5CrF,qBAAU,WACR,GAAIsF,EAKF,OAJAuD,OAAOC,eAAiB,SAAAC,GACtB,MAAO,4DAGF,kBAAOF,OAAOC,oBAAiB5F,KAEvC,CAACoC,IAGF,yBACE0D,WAAS,EACTC,YAAa,SAAAF,GACXA,EAAIG,aAAaC,QAAQ,aAAzB,UAA0C3J,EAAKE,KAA/C,YAAuDF,EAAKG,WAE9DyJ,WAAY,SAAAL,GAAG,OAAIA,EAAIM,kBACvBC,OAAQ,SAAAP,GACNA,EAAIM,iBADS,MAEWN,EAAIG,aAAaK,QAAQ,QAAQC,MAAM,KAFlD,oBA7DnB,SAAsBC,GACpB,IAAMC,EAAazI,EAAM0I,UAAUpK,EAAckK,IAC3CG,EAAY3I,EAAM0I,UAAUpK,EAAcC,IAEhD,IAAoB,IAAhBkK,IAAoC,IAAfE,EAAzB,CAEA,IAAIC,EAGFA,EADEH,EAAaE,EAEbA,GAAa3I,EAAM6I,OAAS,EACxBtK,EAAKuK,UAAY,IACjB9I,EAAM2I,EAAY,GAAGG,UAGzBH,EAAY,EAAI3I,EAAM2I,EAAY,GAAGG,UAAYxI,KAAK+E,MAG1D,IAAMyD,EAAYtF,KAAK2C,OAAO5H,EAAKuK,UAAYF,GAAkB,GAC3DpK,EAAYwB,EAAMgC,KAAK1D,EAAckK,IAE3C3I,IACGmH,MADH,UACYzE,EADZ,WAC8B,CAC1BT,SAAU0G,EACVzG,SAAS,EAAD,GAAOvD,EAAP,CAAkBsK,gBAE3B7B,MAAK,SAAAC,GACJnB,OAEDoB,OAAM,SAAAC,GACDA,EAAIC,UAAoC,MAAxBD,EAAIC,SAASC,OAC/BpI,EACE,iEAEOkI,EAAIC,UAAoC,MAAxBD,EAAIC,SAASC,OACtCpI,EAAgB,sDAEhBA,EAAgB,qCAChBqI,QAAQC,MAAMJ,QA0BhB2B,CAAa,CAAEtK,KAHF,KAGQC,QAHR,QAKfY,UAAU,OACV0J,MAAO,CACL,eAAgBzK,EAAK0K,QAGvB,yBAAK3J,UAAU,aACb,kBAAC,EAAD,CAAW8E,QAASA,EAASC,eAAgBA,GACzCA,EASA,4BACE/E,UAAU,OACV4J,QAAS,WACPzB,MAGF,yBACE0B,IAAG,UAAK1G,sBAAL,kCACH2G,IAAI,aACJC,MAAM,gBAjBV,4BAAQ/J,UAAU,QAAQ4J,QAAS,kBAAM7C,GAAkB,KACzD,yBACE8C,IAAG,UAAK1G,sBAAL,uCACH2G,IAAI,cACJC,MAAM,mBAmBhB,yBAAK/J,UAAU,aACb,yBAAKA,UAAU,cACb,4BAAKf,EAAKE,MACTgH,EAAQW,GAFX,IAEoBX,EAAQS,GACzB,MACD,0BACE5G,UAAU,YACV4J,QAAS,kBAAMlD,EAAczH,EAAKG,WAEjCH,EAAKG,SAEPW,GAEH,yBAAKC,UAAU,aACb,4BACEA,UAAU,OACV4J,QAAS,WACH7E,GACFoD,IAEF3B,MANJ,Y,ykBCnNV,IAAMwD,EAAa,SAAAC,GAAM,OAAI,SAAAzB,GAAG,OAAIyB,EAAOzB,EAAI0B,OAAOC,SAgIvCC,MA9Hf,YAAyD,IAArCnL,EAAoC,EAApCA,KAAMoL,EAA8B,EAA9BA,cAAe5D,EAAe,EAAfA,YAAe,EACtBnH,mBAASL,EAAKE,MADQ,mBAC/CmL,EAD+C,KACrCC,EADqC,OAExBjL,mBAAS4E,KAAK2C,MAAM5H,EAAK6F,QAAU,IAAM,IAFjB,mBAE/C8B,EAF+C,KAEtC4D,EAFsC,OAG5BlL,mBAAS4E,KAAK2C,MAAM5H,EAAK6F,QAAU,GAAK,KAHZ,mBAG/CgC,EAH+C,KAGxC2D,EAHwC,KAIhDlL,EAAcF,IAJkC,EAKNC,oBAAS,GALH,mBAK/CoL,EAL+C,KAK7BC,EAL6B,OAMlBjL,IANkB,mBAM/CK,EAN+C,KAMrCH,EANqC,KAQtD,SAAS4G,IACPjG,IACGmH,MADH,UACYzE,EADZ,WAC8B,CAC1BT,SAAU,CAAErD,KAAMF,EAAKE,KAAMC,QAASH,EAAKG,SAC3CqD,SAAS,KACJxD,EADG,CAENE,KAAMmL,EACNxF,QAAiB,GAARgC,EAAa,GAAe,GAAVF,MAG9Be,MAAK,SAAAC,GACCrI,GACH8K,IAEF5D,OAEDoB,OAAM,SAAAC,GACDA,EAAIC,UAAoC,MAAxBD,EAAIC,SAASC,OAC/BpI,EAAgB,yCACPkI,EAAIC,UAAoC,MAAxBD,EAAIC,SAASC,OACtCpI,EAAgB,sDAEhBA,EAAgB,qCAChBqI,QAAQC,MAAMJ,OAgCtB,IAAM8C,EAAgB,SAAA5F,GAAQ,OAC5B,4BAAQhF,UAAU,UAAU4J,QAASpD,EAAUqE,UAAWP,GACvDtF,IAIL,OACE,yBAAKhF,UAAU,OAAO0J,MAAO,CAAE,eAAgBzK,EAAK0K,QAClD,yBAAK3J,UAAU,aACb,kBAAC,EAAD,CAAW8E,QAAS7F,EAAK6F,SACtB8F,EACC,yBACEf,IAAG,UAAK1G,sBAAL,iCACH2G,IAAI,YACJC,MAAM,iBAKd,yBAAK/J,UAAU,aACb,4BACE,2BACE8K,KAAK,OACLC,YAAY,YACZZ,MAAOG,EACPU,SAAUhB,EAAWO,MAGzB,2BACEO,KAAK,SACLG,IAAK,EACLd,MAAOrD,EACPkE,SAAUhB,EAAWS,KAbzB,IAgBE,2BACEK,KAAK,SACLG,IAAK,EACLC,IAAK,GACLf,MAAOvD,EACPoE,SAAUhB,EAAWQ,KAEtBzK,GAEH,yBAAKC,UAAU,aACZ4K,EAAc,aACf,4BAAQ5K,UAAU,SAAS4J,QAASS,GAApC,UAGA,4BACErK,UAAU,SACV4J,QAAS,WACHc,EA9EZnK,IACG4K,KADH,UACWlI,EADX,iBACmC,CAC/B9D,KAAMF,EAAKE,KACXC,QAASH,EAAKG,UAEfuI,MAAK,SAAAC,GACCrI,GACH8K,IAEF5D,GAAY,SAAA/F,GAAK,OACfA,EAAMoC,QACJ,SAAA5D,GAAS,OACPD,EAAKE,OAASD,EAAUC,MAAQF,EAAKG,UAAYF,EAAUE,iBAIlEyI,OAAM,SAAAC,GACDA,EAAIC,UAAoC,MAAxBD,EAAIC,SAASC,OAC/BpI,EAAgB,mDAEhBA,EAAgB,qCAChBqI,QAAQC,MAAMJ,OA0DP6C,GAAoB,KAGzBD,EAA8B,UAAX,aClEhBU,MAzDf,YAA4D,IAA5CnM,EAA2C,EAA3CA,KAAMwH,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,cAAehG,EAAS,EAATA,MAAS,EACvBpB,oBAAS,GADc,mBAClD+L,EADkD,KACvCC,EADuC,OAEnBhM,oBACnC4D,QAAQvC,aAAaa,QAAQ,mBAHyB,mBAElD+J,EAFkD,KAErCC,EAFqC,KAMzD/L,qBAAU,WACH8L,GACH5K,aAAaC,QAAQ,gBAAiB,OAEvC,CAAC2K,IAEJ,IAAME,EAAc/K,EAAQA,EAAM6I,OAAS,KAQ3C,OANA9J,qBAAU,WACY,OAAhBgM,GAAwBA,EAAc,GACxCD,GAAe,KAEhB,CAACC,IAEAJ,EAEA,kBAAC,EAAD,CACEpM,KAAMA,EACNoL,cAAe,kBAAMiB,GAAa,IAClC7E,YAAaA,IAMjB,oCACG8E,EACC,yBACEvL,UAAU,oBACV0J,MAAO,CAAE,eAAgBzK,EAAK0K,QAFhC,kFAQA,GAEF,kBAAC,EAAD,CACE1K,KAAMA,EACNuH,SAAU,kBAAM8E,GAAa,IAC7B7E,YAAa,WACXA,IACA+E,GAAe,IAEjB9E,cAAeA,EACfhG,MAAOA,MCjDTsJ,EAAa,SAAAC,GAAM,OAAI,SAAAzB,GAAG,OAAIyB,EAAOzB,EAAI0B,OAAOC,SAEhDuB,EAAmB,CACvB,UACA,UACA,UACA,UACA,WA8JaC,MA3Jf,YAMI,IALFC,EAKC,EALDA,SACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,SACAR,EACC,EADDA,YACC,EAC+BjM,mBAAS,IADxC,mBACMgL,EADN,KACgBC,EADhB,OAEqDjL,mBACpDsM,EAAS,IAAM,IAHhB,mBAEMI,EAFN,KAE2BC,EAF3B,OAK2C3M,mBAAS,IALpD,mBAKM4M,EALN,KAKsBC,EALtB,OAM6C7M,mBAC5CoM,EAAiBxH,KAAK2C,MAAM3C,KAAKkI,SAAWV,EAAiBnC,UAP9D,mBAMM8C,EANN,KAMuBC,EANvB,KAUKC,EAAYP,EACdH,EAAcG,GACdK,EAZH,EAcmC3M,IAdnC,mBAcMK,EAdN,KAcgBH,EAdhB,KAgBDH,qBAAU,WACgB,IAApBmM,EAASrC,QACX0C,EAAuB,MAExB,CAACL,EAASrC,SAwBb,IAAMiD,EAAe,SAAAxH,GAAQ,OAC3B,4BACEhF,UAAU,UACV6K,UAAWP,KAAc0B,GAAuBE,IAE/ClH,IAIL,OACE,0BACEhF,UAAU,OACVyM,SAlCJ,SAAsBC,GACpBA,EAAM5D,iBAENvI,IACG4K,KADH,UACWlI,EADX,WAC6B,CACzB9D,KAAMmL,EACNlL,QAAS4M,GAAuBE,EAChCvC,MAAO4C,EACPzH,QAAS,EACT0E,UAAWxI,KAAK+E,QAEjB4B,KAAKmE,GACLjE,OAAM,SAAAC,GACDA,EAAIC,UAAoC,MAAxBD,EAAIC,SAASC,OAC/BpI,EAAgB,6BAEhBA,EAAgB,qCAChBqI,QAAQC,MAAMJ,QAkBlB4B,MAAO,CAAE,eAAgB6C,IAExBhB,EACC,yBAAKvL,UAAU,qBAAf,8DAIA,GAEF,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAW8E,QAAS,GACjB0H,EACC,yBACE3C,IAAG,UAAK1G,sBAAL,gCACH2G,IAAI,cACJC,MAAM,mBAKd,yBAAK/J,UAAU,aACb,4BACE,2BACE8K,KAAK,OACL6B,GAAG,YACH5B,YAAY,YACZZ,MAAOG,EACPU,SAAUhB,EAAWO,MAGxBqB,EAASrC,OACR,oCACE,4BACEoD,GAAG,eACHxC,MAAO6B,EACPhB,SAAUhB,EAAWiC,IAEpBL,EAASxD,KAAI,SAAAhJ,GAAO,OACnB,4BACEwN,IAAKxN,EACL+K,MAAO/K,EACPsK,MAAO,CAAE,eAAgBmC,EAAczM,KAEtCA,MAGL,4BACE+K,MAAM,GACNT,MAAO,CACL,eAAgB2C,EAChBQ,UAAW,WAJf,gBAUF,8BAGF,GAEuB,KAAxBb,GAA+BJ,EAASrC,OAiBvC,GAhBA,oCACE,2BACEuB,KAAK,OACL6B,GAAG,mBACH5B,YAAY,eACZZ,MAAO+B,EACPlB,SAAUhB,EAAWmC,KAEvB,2BACErB,KAAK,QACL6B,GAAG,oBACHxC,MAAOkC,EACPrB,SAAUhB,EAAWsC,MAM1BvM,GAEH,yBAAKC,UAAU,aACZwM,EAAa,eACd,4BAAQxM,UAAU,SAAS4J,QAASmC,GAApC,aChKO,SAASe,EAAT,GAA+D,IAAzClB,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,cAAepF,EAAe,EAAfA,YAAe,EACrCnH,oBACnC4D,QAAQvC,aAAaa,QAAQ,qBAF2C,mBACpE+J,EADoE,KACvDC,EADuD,OAI/BlM,mBAASiM,GAJsB,mBAIpEwB,EAJoE,KAIpDC,EAJoD,KAM3EvN,qBAAU,YACY,IAAhB8L,GACF5K,aAAaC,QAAQ,kBAAmB,OAEzC,CAAC2K,IAEJ,IAAM0B,EAAiBrB,EAAWA,EAASrC,OAAS,KAUpD,OARA9J,qBAAU,WACe,IAAnBwN,EACFD,GAAkB,GACU,OAAnBC,GAA2BA,EAAiB,GACrDzB,GAAe,KAEhB,CAACyB,IAEAF,GAAkBnB,EAElB,kBAAC,EAAD,CACEA,SAAUA,EACVC,cAAeA,EACfC,SAAU,WACRN,GAAe,GACfwB,GAAkB,GAClBvG,KAEFsF,SAAU,kBAAMiB,GAAkB,IAClCzB,YAAaA,IAMjB,4BACEvL,UAAU,0BACV4J,QAAS,kBAAMoD,GAAkB,KAFnC,YCxCJ,IAAMhD,EAAa,SAAAC,GAAM,OAAI,SAAAzB,GAAG,OAAIyB,EAAOzB,EAAI0B,OAAOC,SA2CvC+C,MAzCf,YAAqD,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,eAC1BC,EAAWjI,iBAAO,MAwBxB,OArBA3F,qBAAU,WACR,SAAS6N,EAAaZ,GACF,WAAdA,EAAME,MACRQ,EAAe,IACXC,GACFA,EAAShI,QAAQkI,SAMvB,OADAjF,OAAOkF,iBAAiB,UAAWF,GAC5B,kBAAMhF,OAAOmF,oBAAoB,UAAWH,MAClD,CAACF,IAGJ3N,qBAAU,WACJ4N,GACFA,EAAShI,QAAQkI,UAElB,CAACJ,IAGF,yBAAKnN,UAAU,cACb,yBACE6J,IAAG,UAAK1G,sBAAL,mCACH2G,IAAI,KAEN,2BACEgB,KAAK,OACLX,MAAOgD,EACPnC,SAAUhB,EAAWoD,GACrBlH,IAAKmH,MCHEK,MAlCf,WAA+B,IAAD,EACYpO,mBACtC4D,QAAQvC,aAAaa,QAAQ,qCAFH,mBACrBmM,EADqB,KACPC,EADO,KAW5B,OANAnO,qBAAU,WACJkO,GACFhN,aAAaC,QAAQ,kCAAmC,OAEzD,CAAC+M,SAE8BhL,IAA9BQ,iEAAYC,cAEP,qCAGLuK,EACK,qCAIP,yBAAK3N,UAAU,wBACb,oDACsB,sCADtB,QACyC,2CADzC,wJAG+D,mCAH/D,wHAOA,4BAAQ4J,QAAS,kBAAMgE,GAAgB,KAAvC,kBC0BSC,MArDf,YAAmD,IAAjCpH,EAAgC,EAAhCA,YAAa7G,EAAmB,EAAnBA,gBA8C7B,OACE,4BAAQI,UAAU,eAAe4J,QA9CnC,WACE,IAAMkE,EAAQ3M,SAAS4M,cAAc,SAgBrC,SAASC,EAAYtB,GACnB,IAAMuB,EAAOvB,EAAMxC,OAAOgE,OAE1B,GAAKD,GAASA,EAAK1E,OAAnB,CAEA,IAAIxG,EACJ,IACEA,EAAWlC,KAAKY,MAAMwM,GACtB,MAAO/F,GAEP,YADAtI,EAAgB,qCAIlBW,IACG4K,KADH,UACWlI,EADX,kBACoCF,GACjC4E,MAAK,SAAAuG,GACJzH,OAEDoB,OAAM,SAAAC,GACDA,EAAIC,SACNnI,EAAgB,uCAEhBA,EAAgB,oDArCxBkO,EAAMhD,KAAO,OACbgD,EAAMK,OAAS,QACfL,EAAMM,QAENN,EAAMN,iBAAiB,UAEvB,WACE,GAAIM,EAAMO,MAAM9E,OAAQ,CACtB,IAAM+E,EAAS,IAAIC,WACbN,EAAOH,EAAMO,MAAM,GACzBC,EAAOE,WAAWP,GAClBK,EAAOd,iBAAiB,OAAQQ,SAiCpC,WC9BWS,MAnBf,YAAiC,IAAV/N,EAAS,EAATA,MAYrB,OACE,4BAAQV,UAAU,eAAe4J,QAZnC,WACE,IAAM8E,EAAIvN,SAAS4M,cAAc,KACjCW,EAAEC,aACA,OACA,iCACEC,mBAAmB/N,KAAKC,UAAUJ,KAEtCgO,EAAEC,aAAa,WAAY,qBAC3BD,EAAEN,UAIF,WCCWS,MAZf,YAA6D,IAAxCnO,EAAuC,EAAvCA,MAAO+F,EAAgC,EAAhCA,YAAa7G,EAAmB,EAAnBA,gBACvC,OACE,yBAAKI,UAAU,mBACb,kBAAC8O,EAAD,CACErI,YAAaA,EACb7G,gBAAiBA,IAEnB,kBAAC,EAAD,CAAac,MAAOA,MCwCXqO,MA3Cf,WAAgB,IAAD,EACyBzP,mBAAS,IADlC,mBACN6N,EADM,KACOC,EADP,OAEuB1N,IAFvB,mBAENK,EAFM,KAEIH,EAFJ,OdcR,SAAkBuN,EAAavN,GACpC,IAAML,EAAcF,IADiC,EAE7BC,mBAAS,MAFoB,mBAEhDoB,EAFgD,KAEzCsO,EAFyC,OAGX1P,mBAAS,GAHE,mBAG9C2P,EAH8C,KAG/BC,EAH+B,KA2BrD,GAtBAzP,qBAAU,WACRc,IACG4O,IADH,UACUlM,EADV,YAEG0E,MAAK,SAAAC,GACCrI,GACHyP,EAASpH,EAAKxF,SAGjByF,OAAM,SAAAC,GACAvI,IACCuI,EAAIC,SACNnI,EAAgB,wCAEhBA,EACE,4DAEFqI,QAAQC,MAAMJ,UAIrB,CAACvI,EAAa0P,EAAerP,IAElB,OAAVc,IACFA,EAAQA,EAAM0O,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAM9F,UAAY6F,EAAM7F,aAEzD2D,EAAY5D,QAAQ,CACtB,IAAMgG,EAAcpC,EACjBqC,OACAC,cACApM,QAAQ,OAAQ,KAChB4F,MAAM,KAELsG,EAAYhG,SACd7I,EAAQA,EAAMoC,QAAO,SAAA7D,GAAI,OACvBsQ,EAAYG,OACV,SAAAC,GAAI,OACF1Q,EAAKE,KAAKsQ,cAAcG,SAASD,IACjC1Q,EAAKG,QAAQqQ,cAAcG,SAASD,UAgBhD,MAAO,CAACjP,EATY,SAAAmP,GACdA,GAEFb,EAASa,EAAgBnP,IAG3BwO,EAAiBD,EAAgB,KclENa,CAAS3C,EAAavN,GAHtC,mBAGNc,EAHM,KAGC+F,EAHD,Od2ER,SAA8B/F,GACnC,GAAc,OAAVA,EACF,MAAO,GAGT,IAAMmL,EAAgBjJ,OAAOmN,OAAO,MAWpC,MAAO,CATUrP,EAAMsP,QAAO,SAACpE,EAAU3M,GACvC,OAAI2M,EAASgE,SAAS3Q,EAAKG,SAClBwM,GAETC,EAAc5M,EAAKG,SAAWH,EAAK0K,MAE7B,GAAN,mBAAWiC,GAAX,CAAqB3M,EAAKG,aACzB,IAEeyM,GcvFgBoE,CAAqBvP,GAJ1C,mBAINkL,EAJM,KAIIC,EAJJ,KAMb,OACE,yBAAK7L,UAAU,kBACb,kBAAC,EAAD,CAAWmN,YAAaA,EAAaC,eAAgBA,IACrD,kBAAC,EAAD,CACE1M,MAAOA,EACP+F,YAAaA,EACb7G,gBAAiBA,IAEnB,kBAACkN,EAAD,CACElB,SAAUA,EACVC,cAAeA,EACfpF,YAAaA,IAEf,yBAAKiD,MAAO,CAAEwG,MAAO,UACpBnQ,EACU,OAAVW,EACGA,EAAM0H,KAAI,SAAAnJ,GAAI,OACZ,kBAAC,EAAD,CACE2N,IAAG,UAAK3N,EAAKG,QAAV,YAAqBH,EAAKE,MAC7BF,KAAMA,EACNyH,cAAe0G,EACf3G,YAAaA,EACb/F,MAAOA,OAGX,GACJ,yBAAKgJ,MAAO,CAAEwG,MAAO,UACrB,yBAAKlQ,UAAU,eACb,kBAAC,EAAD,MACA,6BAFF,6BAG6B,IAC3B,uBAAGmQ,KAAK,iDAAR,eAJF,O,MCpCNC,IAASC,OAAO,kBAAC,EAAD,MAASlP,SAASmP,eAAe,W","file":"static/js/main.28b45a06.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"./API_URL\";\r\n\r\nexport const isTaskEqualTo = task => otherTask =>\r\n  task.name === otherTask.name && task.project === otherTask.project;\r\n\r\nexport function formatTaskName(name) {\r\n  // The slash is needed to separate task name from project.\r\n  return name.replace(/\\//g, \"-\");\r\n}\r\n\r\nexport function useWillUnmount() {\r\n  const [willUnmount, setWillUnmount] = useState(false);\r\n\r\n  useEffect(() => {\r\n    return () => setWillUnmount(true);\r\n  }, []);\r\n\r\n  return willUnmount;\r\n}\r\n\r\nexport function useTasks(searchQuery, setErrorMessage) {\r\n  const willUnmount = useWillUnmount();\r\n  let [tasks, setTasks] = useState(null);\r\n  const [updateCounter, setUpdateCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${API_URL}/tasks/`)\r\n      .then(resp => {\r\n        if (!willUnmount) {\r\n          setTasks(resp.data);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (!willUnmount) {\r\n          if (err.response) {\r\n            setErrorMessage(\"The server responded with an error.\");\r\n          } else {\r\n            setErrorMessage(\r\n              \"Error connecting with the server. Please reload the tab.\"\r\n            );\r\n            console.error(err);\r\n          }\r\n        }\r\n      });\r\n  }, [willUnmount, updateCounter, setErrorMessage]);\r\n\r\n  if (tasks !== null) {\r\n    tasks = tasks.sort((taskA, taskB) => taskB.timestamp - taskA.timestamp);\r\n\r\n    if (searchQuery.length) {\r\n      const searchWords = searchQuery\r\n        .trim()\r\n        .toLowerCase()\r\n        .replace(/\\s+/g, \" \")\r\n        .split(\" \");\r\n\r\n      if (searchWords.length) {\r\n        tasks = tasks.filter(task =>\r\n          searchWords.every(\r\n            word =>\r\n              task.name.toLowerCase().includes(word) ||\r\n              task.project.toLowerCase().includes(word)\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const updateTasks = updaterFunction => {\r\n    if (updaterFunction) {\r\n      // Manually update, to give immediate feedback\r\n      setTasks(updaterFunction(tasks));\r\n      // (But fetch anyway to validate the API did the right thing.)\r\n    }\r\n    setUpdateCounter(updateCounter + 1);\r\n  };\r\n\r\n  return [tasks, updateTasks];\r\n}\r\n\r\nexport function getProjectsFromTasks(tasks) {\r\n  if (tasks === null) {\r\n    return [];\r\n  }\r\n\r\n  const projectColors = Object.create(null);\r\n\r\n  const projects = tasks.reduce((projects, task) => {\r\n    if (projects.includes(task.project)) {\r\n      return projects;\r\n    }\r\n    projectColors[task.project] = task.color;\r\n\r\n    return [...projects, task.project];\r\n  }, []);\r\n\r\n  return [projects, projectColors];\r\n}\r\n\r\nexport function useErrorMessage() {\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isHidden, setIsHidden] = useState(true);\r\n\r\n  const errorDiv = (\r\n    <div className={`error-message ${isHidden ? `hidden` : ``}`}>\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      setIsHidden(false);\r\n\r\n      let timeout = setTimeout(() => {\r\n        setIsHidden(true);\r\n        setErrorMessage(\"\");\r\n        timeout = null;\r\n      }, 3200);\r\n      return () => {\r\n        if (timeout) {\r\n          clearTimeout(timeout);\r\n        }\r\n      };\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  return [errorDiv, setErrorMessage];\r\n}\r\n","import axios from \"axios\";\r\nimport MockAdapter from \"axios-mock-adapter\";\r\nimport { isTaskEqualTo } from \"./hooks\";\r\n\r\nconst mockAPI = \"https://mock.adapter.com\";\r\nconst mockAdapter = new MockAdapter(axios, { delayResponse: 180 });\r\n\r\nfunction getTasks() {\r\n  if (localStorage.getItem(\"tasks\")) {\r\n    return JSON.parse(localStorage.getItem(\"tasks\"));\r\n  } else {\r\n    // Try to recover data from cookies\r\n    return getTasksFromCookies() || [];\r\n  }\r\n}\r\n\r\nfunction saveTasks(tasks) {\r\n  localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  setTasksInCookies(tasks);\r\n}\r\n\r\nfunction getTasksFromCookies() {\r\n  const cookie = document.cookie;\r\n  const match = cookie.match(/tasks=([^;]+)/);\r\n  const json = match && unescape(match[1]);\r\n  return json && JSON.parse(json);\r\n}\r\n\r\nfunction setTasksInCookies(tasks) {\r\n  const expirationDate = new Date();\r\n  expirationDate.setFullYear(expirationDate.getFullYear() + 6);\r\n  document.cookie = `tasks=${escape(\r\n    JSON.stringify(tasks)\r\n  )};expires=${expirationDate.toGMTString()}`;\r\n}\r\n\r\nlet tasks = getTasks();\r\n\r\nmockAdapter.onGet(`${mockAPI}/tasks/`).reply(config => {\r\n  return [200, tasks.slice()];\r\n});\r\n\r\nmockAdapter.onPost(`${mockAPI}/tasks/`).reply(config => {\r\n  const newTask = JSON.parse(config.data);\r\n\r\n  if (tasks.some(isTaskEqualTo(newTask))) {\r\n    return [403, {}];\r\n  }\r\n\r\n  tasks.push(newTask);\r\n  saveTasks(tasks);\r\n  return [200, {}];\r\n});\r\n\r\nmockAdapter.onPatch(`${mockAPI}/tasks/`).reply(config => {\r\n  const { old_task, new_task } = JSON.parse(config.data);\r\n\r\n  const task = tasks.find(isTaskEqualTo(old_task));\r\n\r\n  if (\r\n    !isTaskEqualTo(old_task)(new_task) &&\r\n    tasks.some(isTaskEqualTo(new_task))\r\n  ) {\r\n    // Trying to change task name, but it already exists a task with the new name.\r\n    return [405, {}];\r\n  }\r\n\r\n  if (task === undefined) {\r\n    return [403, {}];\r\n  }\r\n\r\n  Object.assign(task, new_task);\r\n  saveTasks(tasks);\r\n  return [200, {}];\r\n});\r\n\r\nmockAdapter.onPost(`${mockAPI}/delete-task/`).reply(config => {\r\n  const task = JSON.parse(config.data);\r\n\r\n  if (!tasks.some(isTaskEqualTo(task))) {\r\n    return [403, {}];\r\n  }\r\n\r\n  tasks = tasks.filter(otherTask => !isTaskEqualTo(task)(otherTask));\r\n  saveTasks(tasks);\r\n  return [200, {}];\r\n});\r\n\r\nmockAdapter.onPost(`${mockAPI}/import-tasks/`).reply(config => {\r\n  const newTasks = JSON.parse(config.data);\r\n\r\n  tasks = tasks\r\n    .filter(task => !newTasks.some(isTaskEqualTo(task)))\r\n    .concat(newTasks);\r\n\r\n  saveTasks(tasks);\r\n  return [200, {}];\r\n});\r\n\r\nexport { mockAPI };\r\n","import { mockAPI } from \"./mockAdapter\";\r\n\r\nconst usesRealAPI = Boolean(process.env.REACT_APP_API);\r\nconst API_URL = usesRealAPI\r\n  ? process.env.REACT_APP_API.replace(/\\/^/, \"\")\r\n  : mockAPI;\r\n\r\n// If there's no real API, all requests will be sent to the mockAPI url.\r\n// Then the mockAdapter will take care of them.\r\n\r\nexport default API_URL;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nfunction initCanvas(canvas) {\r\n  const rect = canvas.getBoundingClientRect();\r\n  const width = (canvas.width = rect.width);\r\n  const height = (canvas.height = rect.height);\r\n\r\n  const cx = canvas.getContext(\"2d\");\r\n  cx.fillStyle = \"white\";\r\n\r\n  return [cx, width, height];\r\n}\r\n\r\nfunction drawTime(cx, width, height, percent) {\r\n  const startAngle = -Math.PI / 2;\r\n  const endAngle = Math.PI * 2 * percent + startAngle;\r\n  const center = [width / 2, height / 2];\r\n\r\n  cx.globalAlpha = 0.4;\r\n  cx.clearRect(0, 0, width, height);\r\n  cx.beginPath();\r\n  cx.moveTo(...center);\r\n  cx.arc(...center, width / 2, startAngle, endAngle);\r\n  cx.fill();\r\n\r\n  cx.globalAlpha = 1;\r\n  cx.globalCompositeOperation = \"destination-out\";\r\n  cx.beginPath();\r\n  cx.moveTo(...center);\r\n  cx.arc(...center, width / 2 - 4, 0, Math.PI * 2);\r\n  cx.fill();\r\n  cx.globalCompositeOperation = \"source-over\";\r\n}\r\n\r\nfunction startTimer(canvas, startingSeconds) {\r\n  let timerIsRunning = true;\r\n\r\n  const [cx, width, height] = initCanvas(canvas);\r\n\r\n  requestAnimationFrame(frame);\r\n\r\n  let lastTime = performance.now();\r\n  let minutePercent = (startingSeconds % 60) / 60;\r\n\r\n  function frame(time) {\r\n    if (timerIsRunning) {\r\n      requestAnimationFrame(frame);\r\n    }\r\n\r\n    const dt = (time - lastTime) / 1000;\r\n    lastTime = time;\r\n\r\n    minutePercent += dt / 60;\r\n\r\n    drawTime(cx, width, height, minutePercent);\r\n  }\r\n\r\n  return function stopTimer() {\r\n    timerIsRunning = false;\r\n  };\r\n}\r\n\r\nfunction drawTimer(canvas, seconds) {\r\n  const [cx, width, height] = initCanvas(canvas);\r\n  const percent = (seconds % 60) / 60;\r\n\r\n  drawTime(cx, width, height, percent);\r\n}\r\n\r\nfunction TaskTimer({ seconds, isTimerRunning = false, children }) {\r\n  const [startingSeconds, setStartingSeconds] = useState(seconds);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Each minute resets the animation\r\n  useEffect(() => {\r\n    if (seconds % 60 === 0) {\r\n      setStartingSeconds(seconds);\r\n    }\r\n  }, [seconds]);\r\n\r\n  // When timer stops, update starting seconds for next time we hit play\r\n  useEffect(() => {\r\n    if (!isTimerRunning) {\r\n      setStartingSeconds(seconds);\r\n    }\r\n  }, [isTimerRunning, seconds]);\r\n\r\n  // Draw\r\n  useEffect(() => {\r\n    if (canvasRef.current && process.env.JEST_WORKER_ID === undefined) {\r\n      if (isTimerRunning) {\r\n        return startTimer(canvasRef.current, startingSeconds);\r\n      } else {\r\n        drawTimer(canvasRef.current, startingSeconds);\r\n      }\r\n    }\r\n  }, [isTimerRunning, startingSeconds]);\r\n\r\n  return (\r\n    <div className=\"task-timer-container\">\r\n      <canvas ref={canvasRef} className=\"task-timer\"></canvas>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskTimer;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../API_URL\";\r\nimport TaskTimer from \"./TaskTimer\";\r\nimport { isTaskEqualTo, useErrorMessage, useWillUnmount } from \"../hooks\";\r\n\r\nconst zeroPad = number => {\r\n  return String(100 + (number % 100)).substr(1);\r\n};\r\n\r\nfunction ShowTask({ task, editTask, updateTasks, selectProject, tasks }) {\r\n  const [seconds, setSeconds] = useState(task.seconds);\r\n  const minutes = Math.floor(seconds / 60) % 60;\r\n  const hours = Math.floor(seconds / 60 / 60);\r\n\r\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [secondsBeforeStart, setSecondsBeforeStart] = useState(task.seconds);\r\n\r\n  const [errorDiv, setErrorMessage] = useErrorMessage();\r\n  const willUnmount = useWillUnmount();\r\n\r\n  // Clock tick\r\n  useEffect(() => {\r\n    if (isTimerRunning) {\r\n      const interval = setInterval(() => {\r\n        setSeconds(\r\n          Math.floor(secondsBeforeStart + Date.now() / 1000 - startTime)\r\n        );\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    } else {\r\n      setSeconds(secondsBeforeStart);\r\n    }\r\n  }, [isTimerRunning, secondsBeforeStart, startTime]);\r\n\r\n  useEffect(() => {\r\n    if (isTimerRunning) {\r\n      setStartTime(Date.now() / 1000);\r\n    }\r\n  }, [isTimerRunning]);\r\n\r\n  useEffect(() => {\r\n    if (!isTimerRunning) {\r\n      setSecondsBeforeStart(task.seconds);\r\n    }\r\n  }, [isTimerRunning, task.seconds]);\r\n\r\n  const saveTask = useCallback(\r\n    callback => {\r\n      axios\r\n        .patch(`${API_URL}/tasks/`, {\r\n          old_task: { name: task.name, project: task.project },\r\n          new_task: { ...task, seconds }\r\n        })\r\n        .then(resp => {\r\n          if (callback) {\r\n            callback();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (err.response && err.response.status === 405) {\r\n            setErrorMessage(\r\n              \"Somehow, we tried to change this task name to an invalid one.\"\r\n            );\r\n          } else if (err.response && err.response.status === 403) {\r\n            setErrorMessage(\r\n              \"Invalid request: this task doesn't exist anymore.\"\r\n            );\r\n          } else {\r\n            setErrorMessage(\"Error connecting with the server.\");\r\n            console.error(err);\r\n          }\r\n        });\r\n    },\r\n    [task, seconds, setErrorMessage]\r\n  );\r\n\r\n  // Stop timer and save result\r\n  function stopTimer() {\r\n    saveTask(() => {\r\n      updateTasks(tasks =>\r\n        tasks.map(someTask => {\r\n          if (\r\n            someTask.name === task.name &&\r\n            someTask.project === task.project\r\n          ) {\r\n            return { ...task, seconds };\r\n          }\r\n          return someTask;\r\n        })\r\n      );\r\n      if (!willUnmount) {\r\n        setIsTimerRunning(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Save task every minute\r\n  useEffect(() => {\r\n    if (isTimerRunning && seconds !== task.seconds && seconds % 60 === 0) {\r\n      saveTask();\r\n    }\r\n  }, [isTimerRunning, saveTask, seconds, task.seconds]);\r\n\r\n  function reorderTasks(other) {\r\n    const otherIndex = tasks.findIndex(isTaskEqualTo(other));\r\n    const taskIndex = tasks.findIndex(isTaskEqualTo(task));\r\n\r\n    if (otherIndex === -1 || taskIndex === -1) return;\r\n\r\n    let otherTimestamp;\r\n\r\n    if (otherIndex < taskIndex) {\r\n      otherTimestamp =\r\n        taskIndex >= tasks.length - 1\r\n          ? task.timestamp - 9000\r\n          : tasks[taskIndex + 1].timestamp;\r\n    } else {\r\n      otherTimestamp =\r\n        taskIndex > 0 ? tasks[taskIndex - 1].timestamp : Date.now();\r\n    }\r\n\r\n    const timestamp = Math.floor((task.timestamp + otherTimestamp) / 2);\r\n    const otherTask = tasks.find(isTaskEqualTo(other));\r\n\r\n    axios\r\n      .patch(`${API_URL}/tasks/`, {\r\n        old_task: other,\r\n        new_task: { ...otherTask, timestamp }\r\n      })\r\n      .then(resp => {\r\n        updateTasks();\r\n      })\r\n      .catch(err => {\r\n        if (err.response && err.response.status === 405) {\r\n          setErrorMessage(\r\n            \"Somehow, we tried to change this task name to an invalid one.\"\r\n          );\r\n        } else if (err.response && err.response.status === 403) {\r\n          setErrorMessage(\"Invalid request: This task doesn't exist anymore.\");\r\n        } else {\r\n          setErrorMessage(\"Error connecting with the server.\");\r\n          console.error(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  // Ask confirmation when user closes tab\r\n  useEffect(() => {\r\n    if (isTimerRunning) {\r\n      window.onbeforeunload = evt => {\r\n        return \"There's a task running. You'll loose the timer progress.\";\r\n      };\r\n\r\n      return () => (window.onbeforeunload = undefined);\r\n    }\r\n  }, [isTimerRunning]);\r\n\r\n  return (\r\n    <div\r\n      draggable\r\n      onDragStart={evt => {\r\n        evt.dataTransfer.setData(\"text/plain\", `${task.name}/${task.project}`);\r\n      }}\r\n      onDragOver={evt => evt.preventDefault()}\r\n      onDrop={evt => {\r\n        evt.preventDefault();\r\n        const [name, project] = evt.dataTransfer.getData(\"text\").split(\"/\");\r\n        reorderTasks({ name, project }, task);\r\n      }}\r\n      className=\"task\"\r\n      style={{\r\n        \"--task-color\": task.color\r\n      }}\r\n    >\r\n      <div className=\"task-head\">\r\n        <TaskTimer seconds={seconds} isTimerRunning={isTimerRunning}>\r\n          {!isTimerRunning ? (\r\n            <button className=\"start\" onClick={() => setIsTimerRunning(true)}>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/baseline_play_arrow_white_24dp.png`}\r\n                alt=\"Start timer\"\r\n                title=\"Start timer\"\r\n              />\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"stop\"\r\n              onClick={() => {\r\n                stopTimer();\r\n              }}\r\n            >\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/baseline_pause_white_24dp.png`}\r\n                alt=\"Stop timer\"\r\n                title=\"Stop timer\"\r\n              />\r\n            </button>\r\n          )}\r\n        </TaskTimer>\r\n      </div>\r\n      <div className=\"task-body\">\r\n        <div className=\"float-left\">\r\n          <h3>{task.name}</h3>\r\n          {zeroPad(hours)}:{zeroPad(minutes)}\r\n          {\" - \"}\r\n          <span\r\n            className=\"clickable\"\r\n            onClick={() => selectProject(task.project)}\r\n          >\r\n            {task.project}\r\n          </span>\r\n          {errorDiv}\r\n        </div>\r\n        <div className=\"task-foot\">\r\n          <button\r\n            className=\"edit\"\r\n            onClick={() => {\r\n              if (isTimerRunning) {\r\n                stopTimer();\r\n              }\r\n              editTask();\r\n            }}\r\n          >\r\n            Edit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowTask;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../API_URL\";\r\nimport { useWillUnmount, useErrorMessage } from \"../hooks\";\r\nimport TaskTimer from \"./TaskTimer\";\r\n\r\nconst _fromEvent = setter => evt => setter(evt.target.value);\r\n\r\nfunction EditTask({ task, cancelEdition, updateTasks }) {\r\n  const [taskName, setTaskName] = useState(task.name);\r\n  const [minutes, setMinutes] = useState(Math.floor(task.seconds / 60) % 60);\r\n  const [hours, setHours] = useState(Math.floor(task.seconds / 60 / 60));\r\n  const willUnmount = useWillUnmount();\r\n  const [hasClickedDelete, setHasClickedDelete] = useState(false);\r\n  const [errorDiv, setErrorMessage] = useErrorMessage();\r\n\r\n  function editTask() {\r\n    axios\r\n      .patch(`${API_URL}/tasks/`, {\r\n        old_task: { name: task.name, project: task.project },\r\n        new_task: {\r\n          ...task,\r\n          name: taskName,\r\n          seconds: hours * 60 * 60 + minutes * 60\r\n        }\r\n      })\r\n      .then(resp => {\r\n        if (!willUnmount) {\r\n          cancelEdition();\r\n        }\r\n        updateTasks();\r\n      })\r\n      .catch(err => {\r\n        if (err.response && err.response.status === 405) {\r\n          setErrorMessage(\"A task with that name already exists.\");\r\n        } else if (err.response && err.response.status === 403) {\r\n          setErrorMessage(\"Invalid request: this task doesn't exist anymore!\");\r\n        } else {\r\n          setErrorMessage(\"Error connecting with the server.\");\r\n          console.error(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  function deleteTask() {\r\n    axios\r\n      .post(`${API_URL}/delete-task/`, {\r\n        name: task.name,\r\n        project: task.project\r\n      })\r\n      .then(resp => {\r\n        if (!willUnmount) {\r\n          cancelEdition();\r\n        }\r\n        updateTasks(tasks =>\r\n          tasks.filter(\r\n            otherTask =>\r\n              task.name !== otherTask.name || task.project !== otherTask.project\r\n          )\r\n        );\r\n      })\r\n      .catch(err => {\r\n        if (err.response && err.response.status === 403) {\r\n          setErrorMessage(\"Invalid request: the task was already deleted!\");\r\n        } else {\r\n          setErrorMessage(\"Error connecting with the server.\");\r\n          console.error(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  const confirmButton = children => (\r\n    <button className=\"confirm\" onClick={editTask} disabled={!taskName}>\r\n      {children}\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <div className=\"task\" style={{ \"--task-color\": task.color }}>\r\n      <div className=\"task-head\">\r\n        <TaskTimer seconds={task.seconds}>\r\n          {confirmButton(\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/baseline_edit_white_24dp.png`}\r\n              alt=\"Edit task\"\r\n              title=\"Edit task\"\r\n            />\r\n          )}\r\n        </TaskTimer>\r\n      </div>\r\n      <div className=\"task-body\">\r\n        <h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Task name\"\r\n            value={taskName}\r\n            onChange={_fromEvent(setTaskName)}\r\n          />\r\n        </h3>\r\n        <input\r\n          type=\"number\"\r\n          min={0}\r\n          value={hours}\r\n          onChange={_fromEvent(setHours)}\r\n        />\r\n        :\r\n        <input\r\n          type=\"number\"\r\n          min={0}\r\n          max={60}\r\n          value={minutes}\r\n          onChange={_fromEvent(setMinutes)}\r\n        />\r\n        {errorDiv}\r\n      </div>\r\n      <div className=\"task-foot\">\r\n        {confirmButton(\"Edit task\")}\r\n        <button className=\"cancel\" onClick={cancelEdition}>\r\n          Cancel\r\n        </button>\r\n        <button\r\n          className=\"delete\"\r\n          onClick={() => {\r\n            if (hasClickedDelete) deleteTask();\r\n            else setHasClickedDelete(true);\r\n          }}\r\n        >\r\n          {!hasClickedDelete ? \"Delete\" : \"Delete?\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditTask;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ShowTask from \"./ShowTask\";\r\nimport EditTask from \"./EditTask\";\r\n\r\nfunction Task({ task, updateTasks, selectProject, tasks }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isFirstTime, setIsFirstTime] = useState(\r\n    !Boolean(localStorage.getItem(\"hasShownATask\"))\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!isFirstTime) {\r\n      localStorage.setItem(\"hasShownATask\", \"1\");\r\n    }\r\n  }, [isFirstTime]);\r\n\r\n  const tasksLength = tasks ? tasks.length : null;\r\n\r\n  useEffect(() => {\r\n    if (tasksLength !== null && tasksLength > 1) {\r\n      setIsFirstTime(false);\r\n    }\r\n  }, [tasksLength]);\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <EditTask\r\n        task={task}\r\n        cancelEdition={() => setIsEditing(false)}\r\n        updateTasks={updateTasks}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isFirstTime ? (\r\n        <div\r\n          className=\"first-time-notice\"\r\n          style={{ \"--task-color\": task.color }}\r\n        >\r\n          Now you can start tracking the time you spend on this task! Hit play\r\n          to begin.\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <ShowTask\r\n        task={task}\r\n        editTask={() => setIsEditing(true)}\r\n        updateTasks={() => {\r\n          updateTasks();\r\n          setIsFirstTime(false);\r\n        }}\r\n        selectProject={selectProject}\r\n        tasks={tasks}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../API_URL\";\r\nimport TaskTimer from \"./TaskTimer\";\r\nimport { useErrorMessage } from \"../hooks\";\r\n\r\nconst _fromEvent = setter => evt => setter(evt.target.value);\r\n\r\nconst newProjectColors = [\r\n  \"#6d7502\",\r\n  \"#1fad13\",\r\n  \"#c60d8f\",\r\n  \"#5577ff\",\r\n  \"#ff3344\"\r\n];\r\n\r\nfunction CreateTaskForm({\r\n  projects,\r\n  projectColors,\r\n  onCreate,\r\n  onCancel,\r\n  isFirstTime\r\n}) {\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [selectedProjectName, setSelectedProjectName] = useState(\r\n    projects[0] || \"\"\r\n  );\r\n  const [newProjectName, setNewProjectName] = useState(\"\");\r\n  const [newProjectColor, setNewProjectColor] = useState(\r\n    newProjectColors[Math.floor(Math.random() * newProjectColors.length)]\r\n  );\r\n\r\n  const taskColor = selectedProjectName\r\n    ? projectColors[selectedProjectName]\r\n    : newProjectColor;\r\n\r\n  const [errorDiv, setErrorMessage] = useErrorMessage();\r\n\r\n  useEffect(() => {\r\n    if (projects.length === 0) {\r\n      setSelectedProjectName(\"\");\r\n    }\r\n  }, [projects.length]);\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    axios\r\n      .post(`${API_URL}/tasks/`, {\r\n        name: taskName,\r\n        project: selectedProjectName || newProjectName,\r\n        color: taskColor,\r\n        seconds: 0,\r\n        timestamp: Date.now()\r\n      })\r\n      .then(onCreate)\r\n      .catch(err => {\r\n        if (err.response && err.response.status === 403) {\r\n          setErrorMessage(\"The task already exists!\");\r\n        } else {\r\n          setErrorMessage(\"Error connecting with the server.\");\r\n          console.error(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  const createButton = children => (\r\n    <button\r\n      className=\"confirm\"\r\n      disabled={!taskName || !(selectedProjectName || newProjectName)}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <form\r\n      className=\"task\"\r\n      onSubmit={handleSubmit}\r\n      style={{ \"--task-color\": taskColor }}\r\n    >\r\n      {isFirstTime ? (\r\n        <div className=\"first-time-notice\">\r\n          Start by creating a task. Just anything you're working on.\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"task-head\">\r\n        <TaskTimer seconds={0}>\r\n          {createButton(\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/baseline_add_white_24dp.png`}\r\n              alt=\"Create task\"\r\n              title=\"Create task\"\r\n            />\r\n          )}\r\n        </TaskTimer>\r\n      </div>\r\n      <div className=\"task-body\">\r\n        <h3>\r\n          <input\r\n            type=\"text\"\r\n            id=\"task-name\"\r\n            placeholder=\"Task name\"\r\n            value={taskName}\r\n            onChange={_fromEvent(setTaskName)}\r\n          />\r\n        </h3>\r\n        {projects.length ? (\r\n          <>\r\n            <select\r\n              id=\"project-name\"\r\n              value={selectedProjectName}\r\n              onChange={_fromEvent(setSelectedProjectName)}\r\n            >\r\n              {projects.map(project => (\r\n                <option\r\n                  key={project}\r\n                  value={project}\r\n                  style={{ \"--task-color\": projectColors[project] }}\r\n                >\r\n                  {project}\r\n                </option>\r\n              ))}\r\n              <option\r\n                value=\"\"\r\n                style={{\r\n                  \"--task-color\": newProjectColor,\r\n                  fontStyle: \"italic\"\r\n                }}\r\n              >\r\n                New project\r\n              </option>\r\n            </select>\r\n            <br />\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {selectedProjectName === \"\" || !projects.length ? (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              id=\"new-project-name\"\r\n              placeholder=\"Project name\"\r\n              value={newProjectName}\r\n              onChange={_fromEvent(setNewProjectName)}\r\n            />\r\n            <input\r\n              type=\"color\"\r\n              id=\"new-project-color\"\r\n              value={newProjectColor}\r\n              onChange={_fromEvent(setNewProjectColor)}\r\n            />\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {errorDiv}\r\n      </div>\r\n      <div className=\"task-foot\">\r\n        {createButton(\"Create task\")}\r\n        <button className=\"cancel\" onClick={onCancel}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreateTaskForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CreateTaskForm from \"./CreateTaskForm\";\r\n\r\nexport default function CreateTask({ projects, projectColors, updateTasks }) {\r\n  const [isFirstTime, setIsFirstTime] = useState(\r\n    !Boolean(localStorage.getItem(\"hasCreatedATask\"))\r\n  );\r\n  const [isCreatingTask, setIsCreatingTask] = useState(isFirstTime);\r\n\r\n  useEffect(() => {\r\n    if (isFirstTime === false) {\r\n      localStorage.setItem(\"hasCreatedATask\", \"1\");\r\n    }\r\n  }, [isFirstTime]);\r\n\r\n  const projectsLength = projects ? projects.length : null;\r\n\r\n  useEffect(() => {\r\n    if (projectsLength === 0) {\r\n      setIsCreatingTask(true);\r\n    } else if (projectsLength !== null && projectsLength > 0) {\r\n      setIsFirstTime(false);\r\n    }\r\n  }, [projectsLength]);\r\n\r\n  if (isCreatingTask && projects) {\r\n    return (\r\n      <CreateTaskForm\r\n        projects={projects}\r\n        projectColors={projectColors}\r\n        onCreate={() => {\r\n          setIsFirstTime(false);\r\n          setIsCreatingTask(false);\r\n          updateTasks();\r\n        }}\r\n        onCancel={() => setIsCreatingTask(false)}\r\n        isFirstTime={isFirstTime}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className=\"task task-head new-task\"\r\n      onClick={() => setIsCreatingTask(true)}\r\n    >\r\n      New task\r\n    </button>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nconst _fromEvent = setter => evt => setter(evt.target.value);\r\n\r\nfunction SearchBar({ searchQuery, setSearchQuery }) {\r\n  const inputRef = useRef(null);\r\n\r\n  // Use Escape key to clear and focus\r\n  useEffect(() => {\r\n    function handleEscape(event) {\r\n      if (event.key === \"Escape\") {\r\n        setSearchQuery(\"\");\r\n        if (inputRef) {\r\n          inputRef.current.focus();\r\n        }\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"keydown\", handleEscape);\r\n    return () => window.removeEventListener(\"keydown\", handleEscape);\r\n  }, [setSearchQuery]);\r\n\r\n  // Focus input when searchQuery changes\r\n  useEffect(() => {\r\n    if (inputRef) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <img\r\n        src={`${process.env.PUBLIC_URL}/baseline_search_black_18dp.png`}\r\n        alt=\"\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={searchQuery}\r\n        onChange={_fromEvent(setSearchQuery)}\r\n        ref={inputRef}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction LocalStorageNotice() {\r\n  const [isUnderstood, setIsUnderstood] = useState(\r\n    Boolean(localStorage.getItem(\"understood-local-storage-notice\"))\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isUnderstood) {\r\n      localStorage.setItem(\"understood-local-storage-notice\", \"1\");\r\n    }\r\n  }, [isUnderstood]);\r\n\r\n  if (process.env.REACT_APP_API !== undefined) {\r\n    // If we use a real API, don't show this notice.\r\n    return <></>;\r\n  }\r\n\r\n  if (isUnderstood) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"local-storage-notice\">\r\n      <div>\r\n        This site uses both <b>cookies</b> and <b>localStorage</b> to store your\r\n        user data (it should be safe unless you decide to clear your cache). Any\r\n        data you provide is saved on your current browser and device <i>only</i>\r\n        . The server doesn't store any data whatsoever, so you're adviced to\r\n        keep regular backups using the Export function.\r\n      </div>\r\n      <button onClick={() => setIsUnderstood(true)}>I understand</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocalStorageNotice;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../API_URL\";\r\n\r\nfunction Import({ updateTasks, setErrorMessage }) {\r\n  function importTasks() {\r\n    const input = document.createElement(\"input\");\r\n    input.type = \"file\";\r\n    input.accept = \".json\";\r\n    input.click();\r\n\r\n    input.addEventListener(\"change\", readFile);\r\n\r\n    function readFile() {\r\n      if (input.files.length) {\r\n        const reader = new FileReader();\r\n        const file = input.files[0];\r\n        reader.readAsText(file);\r\n        reader.addEventListener(\"load\", processFile);\r\n      }\r\n    }\r\n\r\n    function processFile(event) {\r\n      const file = event.target.result;\r\n\r\n      if (!file || !file.length) return;\r\n\r\n      let newTasks;\r\n      try {\r\n        newTasks = JSON.parse(file);\r\n      } catch (error) {\r\n        setErrorMessage(\"The file is invalid or corrupted.\");\r\n        return;\r\n      }\r\n\r\n      axios\r\n        .post(`${API_URL}/import-tasks/`, newTasks)\r\n        .then(result => {\r\n          updateTasks();\r\n        })\r\n        .catch(err => {\r\n          if (err.response) {\r\n            setErrorMessage(\"There was an error importing tasks.\");\r\n          } else {\r\n            setErrorMessage(\"There was an error connecting to the server.\");\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <button className=\"import-tasks\" onClick={importTasks}>\r\n      Import\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Import;\r\n","import React from \"react\";\r\n\r\nfunction ExportTasks({ tasks }) {\r\n  function exportTasks() {\r\n    const a = document.createElement(\"a\");\r\n    a.setAttribute(\r\n      \"href\",\r\n      \"data:text/plain;charset=utf-u,\" +\r\n        encodeURIComponent(JSON.stringify(tasks))\r\n    );\r\n    a.setAttribute(\"download\", \"Tasks backup.json\");\r\n    a.click();\r\n  }\r\n\r\n  return (\r\n    <button className=\"export-tasks\" onClick={exportTasks}>\r\n      Export\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ExportTasks;\r\n","import React from \"react\";\r\nimport ImportTasks from \"./ImportTasks\";\r\nimport ExportTasks from \"./ExportTasks\";\r\n\r\nfunction ButtonBar({ tasks, updateTasks, setErrorMessage }) {\r\n  return (\r\n    <div className=\"button-bar task\">\r\n      <ImportTasks\r\n        updateTasks={updateTasks}\r\n        setErrorMessage={setErrorMessage}\r\n      />\r\n      <ExportTasks tasks={tasks} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonBar;\r\n","import React, { useState } from \"react\";\r\nimport Task from \"./Tasks/Task\";\r\nimport CreateTask from \"./Tasks/CreateTask\";\r\nimport { useTasks, getProjectsFromTasks, useErrorMessage } from \"./hooks\";\r\nimport SearchBar from \"./App/SearchBar\";\r\nimport LocalStorageNotice from \"./App/LocalStorageNotice\";\r\nimport ButtonBar from \"./App/ButtonBar\";\r\n\r\nfunction App() {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [errorDiv, setErrorMessage] = useErrorMessage();\r\n  const [tasks, updateTasks] = useTasks(searchQuery, setErrorMessage);\r\n  const [projects, projectColors] = getProjectsFromTasks(tasks);\r\n\r\n  return (\r\n    <div className=\"task-container\">\r\n      <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n      <ButtonBar\r\n        tasks={tasks}\r\n        updateTasks={updateTasks}\r\n        setErrorMessage={setErrorMessage}\r\n      />\r\n      <CreateTask\r\n        projects={projects}\r\n        projectColors={projectColors}\r\n        updateTasks={updateTasks}\r\n      />\r\n      <div style={{ clear: \"both\" }}></div>\r\n      {errorDiv}\r\n      {tasks !== null\r\n        ? tasks.map(task => (\r\n            <Task\r\n              key={`${task.project}/${task.name}`}\r\n              task={task}\r\n              selectProject={setSearchQuery}\r\n              updateTasks={updateTasks}\r\n              tasks={tasks}\r\n            />\r\n          ))\r\n        : \"\"}\r\n      <div style={{ clear: \"both\" }}></div>\r\n      <div className=\"footer task\">\r\n        <LocalStorageNotice />\r\n        <br />\r\n        Mauro Cano Brusa (c) 2019.{\" \"}\r\n        <a href=\"https://github.com/mauroc8/react-time-tracker\">View source</a>.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}